// <assemblyHash>c73c12b1</assemblyHash>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This source code was auto-generated by Microsoft Moles 2010, Version=0.94.0.0.
// </auto-generated>
#pragma warning disable 0067, 0108, 0618
#line hidden
extern alias mmf;

[assembly: mmf::Microsoft.Moles.Framework.MoledAssembly("mscorlib")]
[assembly: mmf::Microsoft.Moles.Framework.MolesDelegatesType(typeof(global::Microsoft.Moles.Framework.MscorlibDelegates))]
[assembly: global::System.Reflection.AssemblyCompany("Microsoft Corporation")]
[assembly: global::System.Reflection.AssemblyFileVersion("4.0.30319.18052")]
[assembly: global::System.Reflection.AssemblyInformationalVersion("4.0.30319.18052")]
[assembly: global::System.Reflection.AssemblyProduct("Microsoft\u00ae .NET Framework")]
[assembly: global::System.Reflection.AssemblyVersion("4.0.0.0")]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System.Runtime.WindowsRuntime.UI.Xaml, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System.Reflection.Context, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System.Core, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("PresentationCore, PublicKey=0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("PresentationFramework, PublicKey=0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System.Runtime.WindowsRuntime, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("WindowsBase, PublicKey=0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9", AllInternalsVisible = false)]
[assembly: global::System.Runtime.CompilerServices.InternalsVisibleTo("System.Numerics, PublicKey=00000000000000000400000000000000", AllInternalsVisible = false)]
[assembly: global::System.Security.SecurityRules(global::System.Security.SecurityRuleSet.Level2, SkipVerificationInFullTrust = true)]
[module: mmf::Microsoft.Moles.Framework.Moles.MolesInstrument]
namespace System.Moles
{
    /// <summary>Mole type of <see cref="T:System.AppDomain"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.AppDomain))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AppDomain")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAppDomain
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.AppDomain>
    {
        /// <summary>Initializes a new mole</summary>
        public MAppDomain()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAppDomain(global::System.AppDomain instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ActivateApplication"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> ActivateApplication
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActivateApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ActivateApplication");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.ActivationContext"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.ActivationContext> ActivationContextGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActivationContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ActivationContext>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_ActivationContext");
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ActivateApplication"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, int> ActivateApplication
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ActivateApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ActivateApplication");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.ActivationContext"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.ActivationContext> ActivationContextGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActivationContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_ActivationContext");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.AppendPrivatePath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> AppendPrivatePathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AppendPrivatePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "AppendPrivatePath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.ApplicationIdentity"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.ApplicationIdentity> ApplicationIdentityGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationIdentity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_ApplicationIdentity");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.ApplicationTrust"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Policy.ApplicationTrust> ApplicationTrustGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_ApplicationTrust");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ApplyPolicy(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string> ApplyPolicyString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ApplyPolicy", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_AssemblyLoad(System.AssemblyLoadEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.AssemblyLoadEventHandler> AssemblyLoadAddAssemblyLoadEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_AssemblyLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_AssemblyLoad", typeof(global::System.AssemblyLoadEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_AssemblyLoad(System.AssemblyLoadEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.AssemblyLoadEventHandler> AssemblyLoadRemoveAssemblyLoadEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_AssemblyLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_AssemblyLoad", typeof(global::System.AssemblyLoadEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_AssemblyResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> AssemblyResolveAddResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_AssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_AssemblyResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_AssemblyResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> AssemblyResolveRemoveResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_AssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_AssemblyResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.BaseDirectory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> BaseDirectoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseDirectory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_BaseDirectory");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ClearPrivatePath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> ClearPrivatePath
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ClearPrivatePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ClearPrivatePath");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ClearShadowCopyPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> ClearShadowCopyPath
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ClearShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ClearShadowCopyPath");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateAppDomainManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> CreateAppDomainManager
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateAppDomainManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateAppDomainManager");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle> CreateComInstanceFromStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateComInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateComInstanceFrom", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, global::System.Runtime.Remoting.ObjectHandle> CreateComInstanceFromStringStringByteArrayAssemblyHashAlgorithm
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateComInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateComInstanceFrom", 
                         typeof(string), typeof(string), typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDefaultContext"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> CreateDefaultContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateDefaultContext");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object> CreateInstanceAndUnwrapStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceAndUnwrap", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object> CreateInstanceAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceAndUnwrap", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, object> CreateInstanceAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceAndUnwrap", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object[], object> CreateInstanceAndUnwrapStringStringObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceAndUnwrap", typeof(string), typeof(string), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object> CreateInstanceFromAndUnwrapStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceFromAndUnwrap", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object> CreateInstanceFromAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, object> CreateInstanceFromAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object[], object> CreateInstanceFromAndUnwrapStringStringObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstanceFrom", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstanceFrom", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstanceFrom", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstanceFrom", typeof(string), typeof(string), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstance", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstance", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateInstance", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringObjectArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "CreateInstance", typeof(string), typeof(string), typeof(object).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateRemotingData"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> CreateRemotingData
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateRemotingData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "CreateRemotingData");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccess
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                         typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessEvidencePermissionSetPermissionSetPermissionSet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                           typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(global::System.Security.Policy.Evidence), 
                                                                                           typeof(global::System.Security.PermissionSet), 
                                                                                           typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessIEnumerableOfCustomAttributeBuilder
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                                                                                                  typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Security.SecurityContextSource, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessIEnumerableOfCustomAttributeBuilderSecurityContextSource
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "DefineDynamicAssembly", 
                         typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                         typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>), 
                         typeof(global::System.Security.SecurityContextSource));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessPermissionSetPermissionSetPermissionSet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "DefineDynamicAssembly", 
                         typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                         typeof(global::System.Security.PermissionSet), 
                         typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                         typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringBooleanIEnumerableOfCustomAttributeBuilder
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "DefineDynamicAssembly", 
                         typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), 
                                                                                                                                       typeof(bool), typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "DefineDynamicAssembly", 
                         typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                         typeof(string), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                           typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), typeof(global::System.Security.Policy.Evidence), 
                                                                                           typeof(global::System.Security.PermissionSet), 
                                                                                           typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, bool, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                         typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.PermissionSet), 
                         typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSetBooleanIEnumerableOfCustomAttributeBuilder
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                         typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.PermissionSet), 
                         typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet), 
                         typeof(bool), typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringPermissionSetPermissionSetPermissionSet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                           typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), typeof(global::System.Security.PermissionSet), 
                                                                                                                                                                         typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DisableFusionUpdatesFromADManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> DisableFusionUpdatesFromADManager
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DisableFusionUpdatesFromADManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "DisableFusionUpdatesFromADManager");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.CrossAppDomainDelegate> DoCallBackCrossAppDomainDelegate
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DoCallBack", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "DoCallBack", typeof(global::System.CrossAppDomainDelegate));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.DomainManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.AppDomainManager> DomainManagerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DomainManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_DomainManager");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_DomainUnload(System.EventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler> DomainUnloadAddEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_DomainUnload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "add_DomainUnload", typeof(global::System.EventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_DomainUnload(System.EventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler> DomainUnloadRemoveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_DomainUnload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_DomainUnload", typeof(global::System.EventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.DynamicDirectory"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> DynamicDirectoryGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DynamicDirectory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_DynamicDirectory");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.EnableResolveAssembliesForIntrospection(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> EnableResolveAssembliesForIntrospectionString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnableResolveAssembliesForIntrospection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "EnableResolveAssembliesForIntrospection", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.Evidence"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Policy.Evidence> EvidenceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Evidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_Evidence");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.EvidenceNoDemand"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Policy.Evidence> EvidenceNoDemandGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EvidenceNoDemand", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_EvidenceNoDemand");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyByNameAssemblyNameEvidenceStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssemblyByName", typeof(global::System.Reflection.AssemblyName), 
                         typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, string[], int> ExecuteAssemblyByNameAssemblyNameStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssemblyByName", typeof(global::System.Reflection.AssemblyName), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, int> ExecuteAssemblyByNameString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ExecuteAssemblyByName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, int> ExecuteAssemblyByNameStringEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssemblyByName", typeof(string), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyByNameStringEvidenceStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssemblyByName", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string[], int> ExecuteAssemblyByNameStringStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssemblyByName", typeof(string), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, int> ExecuteAssemblyString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ExecuteAssembly", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, int> ExecuteAssemblyStringEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssembly", typeof(string), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyStringEvidenceStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssembly", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int> ExecuteAssemblyStringEvidenceStringArrayByteArrayAssemblyHashAlgorithm
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ExecuteAssembly", 
                         typeof(string), typeof(global::System.Security.Policy.Evidence), 
                         typeof(string).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string[], int> ExecuteAssemblyStringStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ExecuteAssembly", typeof(string), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int> ExecuteAssemblyStringStringArrayByteArrayAssemblyHashAlgorithm
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ExecuteAssembly", 
                         typeof(string), typeof(string).MakeArrayType(), 
                         typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_FirstChanceException(System.EventHandler`1{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>> FirstChanceExceptionAddEventHandlerOfFirstChanceExceptionEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_FirstChanceException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                                                                                           "add_FirstChanceException", typeof(global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_FirstChanceException(System.EventHandler`1{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>> FirstChanceExceptionRemoveEventHandlerOfFirstChanceExceptionEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_FirstChanceException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "remove_FirstChanceException", 
                                                                                                         typeof(global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.FriendlyName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> FriendlyNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FriendlyName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_FriendlyName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.FusionStore"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.AppDomainSetup> FusionStoreGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FusionStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_FusionStore");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetAppDomainManagerType(System.String@,System.String@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutAction<global::System.AppDomain, string, string> GetAppDomainManagerTypeStringOutStringOut
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "GetAppDomainManagerType", typeof(string).MakeByRefType(), typeof(string).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.Assembly[]> GetAssemblies
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetAssemblies");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetData(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, object> GetDataString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetData", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetDefaultContext"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Runtime.Remoting.Contexts.Context> GetDefaultContext
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDefaultContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetDefaultContext");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetHomogenousGrantSet(System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet> GetHomogenousGrantSetEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHomogenousGrantSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "GetHomogenousGrantSet", typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetHostEvidence(System.Type)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Type, global::System.Security.Policy.EvidenceBase> GetHostEvidenceType
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHostEvidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetHostEvidence", typeof(global::System.Type));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetTargetFrameworkName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> GetTargetFrameworkName
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetTargetFrameworkName");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetThreadPrincipal"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Principal.IPrincipal> GetThreadPrincipal
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetThreadPrincipal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetThreadPrincipal");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Type> GetType01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "GetType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.HostSecurityManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.HostSecurityManager> HostSecurityManagerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostSecurityManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_HostSecurityManager");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.Id"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, int> IdGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_Id");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeCompatibilityFlags"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> InitializeCompatibilityFlags
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeCompatibilityFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InitializeCompatibilityFlags");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeDomainSecurity(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Boolean,System.IntPtr,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, bool, global::System.IntPtr, bool> InitializeDomainSecurityEvidenceEvidenceBooleanIntPtrBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeDomainSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InitializeDomainSecurity", 
                         typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.Policy.Evidence), 
                         typeof(bool), typeof(global::System.IntPtr), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeLifetimeService"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, object> InitializeLifetimeService
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeLifetimeService", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InitializeLifetimeService");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceFromWithNoSecurity(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceFromWithNoSecurityStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceFromWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "InternalCreateInstanceFromWithNoSecurity", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceFromWithNoSecurity(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceFromWithNoSecurityStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceFromWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "InternalCreateInstanceFromWithNoSecurity", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceWithNoSecurity(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceWithNoSecurityStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "InternalCreateInstanceWithNoSecurity", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceWithNoSecurity(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceWithNoSecurityStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "InternalCreateInstanceWithNoSecurity", typeof(string), typeof(string), 
                         typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                         typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                         typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.InternalEvidence"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.Policy.Evidence> InternalEvidenceGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InternalEvidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_InternalEvidence");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetCachePath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> InternalSetCachePathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetCachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetCachePath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetDomainContext(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> InternalSetDomainContextString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetDomainContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetDomainContext", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetDynamicBase(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> InternalSetDynamicBaseString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetDynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetDynamicBase", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetPrivateBinPath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> InternalSetPrivateBinPathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetPrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetPrivateBinPath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetShadowCopyFiles"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> InternalSetShadowCopyFiles
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetShadowCopyFiles");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetShadowCopyPath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> InternalSetShadowCopyPathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "InternalSetShadowCopyPath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, bool?> IsCompatibilitySwitchSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsCompatibilitySwitchSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "IsCompatibilitySwitchSet", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsDefaultAppDomain"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> IsDefaultAppDomain
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsDefaultAppDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "IsDefaultAppDomain");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsFullyTrusted"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> IsFullyTrustedGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsFullyTrusted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_IsFullyTrusted");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsHomogenous"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> IsHomogenousGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsHomogenous", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_IsHomogenous");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsLegacyCasPolicyEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> IsLegacyCasPolicyEnabledGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsLegacyCasPolicyEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_IsLegacyCasPolicyEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Assembly> LoadAssemblyName
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "Load", typeof(global::System.Reflection.AssemblyName));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadAssemblyNameEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "Load", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, byte[], global::System.Reflection.Assembly> LoadByteArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "Load", typeof(byte).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, byte[], byte[], global::System.Reflection.Assembly> LoadByteArrayByteArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "Load", typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, byte[], byte[], global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadByteArrayByteArrayEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "Load", typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Reflection.Assembly> LoadString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "Load", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadStringEvidence
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "Load", typeof(string), typeof(global::System.Security.Policy.Evidence));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.LocalStore"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Collections.Generic.Dictionary<string, object[]>> LocalStoreGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_LocalStore");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringSurvivedMemorySize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, long> MonitoringSurvivedMemorySizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringSurvivedMemorySize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_MonitoringSurvivedMemorySize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringTotalAllocatedMemorySize"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, long> MonitoringTotalAllocatedMemorySizeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringTotalAllocatedMemorySize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_MonitoringTotalAllocatedMemorySize");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringTotalProcessorTime"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.TimeSpan> MonitoringTotalProcessorTimeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringTotalProcessorTime", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_MonitoringTotalProcessorTime");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.OnDesignerNamespaceResolveEvent(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string, string[]> OnDesignerNamespaceResolveEventString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnDesignerNamespaceResolveEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "OnDesignerNamespaceResolveEvent", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.PartialTrustVisibleAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string[]> PartialTrustVisibleAssembliesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_PartialTrustVisibleAssemblies");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.PartialTrustVisibleAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string[]> PartialTrustVisibleAssembliesSetStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "set_PartialTrustVisibleAssemblies", typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.PermissionSet"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Security.PermissionSet> PermissionSetGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PermissionSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_PermissionSet");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ProcessExit(System.EventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler> ProcessExitAddEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ProcessExit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "add_ProcessExit", typeof(global::System.EventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ProcessExit(System.EventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.EventHandler> ProcessExitRemoveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ProcessExit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_ProcessExit", typeof(global::System.EventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ReflectionOnlyAssemblyResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> ReflectionOnlyAssemblyResolveAddResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ReflectionOnlyAssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_ReflectionOnlyAssemblyResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ReflectionOnlyAssemblyResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> ReflectionOnlyAssemblyResolveRemoveResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ReflectionOnlyAssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_ReflectionOnlyAssemblyResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ReflectionOnlyGetAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.Reflection.Assembly[]> ReflectionOnlyGetAssemblies
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReflectionOnlyGetAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ReflectionOnlyGetAssemblies");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.RelativeSearchPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> RelativeSearchPathGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RelativeSearchPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_RelativeSearchPath");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ResolveAssemblyForIntrospection(System.Object,System.ResolveEventArgs)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, object, global::System.ResolveEventArgs, global::System.Reflection.Assembly> ResolveAssemblyForIntrospectionObjectResolveEventArgs
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResolveAssemblyForIntrospection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "ResolveAssemblyForIntrospection", typeof(object), typeof(global::System.ResolveEventArgs));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ResourceResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> ResourceResolveAddResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ResourceResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_ResourceResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ResourceResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> ResourceResolveRemoveResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ResourceResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_ResourceResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.RunDomainManagerPostInitialization(System.AppDomainManager)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.AppDomainManager> RunDomainManagerPostInitializationAppDomainManager
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RunDomainManagerPostInitialization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "RunDomainManagerPostInitialization", typeof(global::System.AppDomainManager));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetAppDomainManagerType(System.String,System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string, string> SetAppDomainManagerTypeStringString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetAppDomainManagerType", typeof(string), typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Policy.PolicyLevel> SetAppDomainPolicyPolicyLevel
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAppDomainPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "SetAppDomainPolicy", typeof(global::System.Security.Policy.PolicyLevel));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetCachePath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> SetCachePathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetCachePath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetCanonicalConditionalAptcaList(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> SetCanonicalConditionalAptcaListString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCanonicalConditionalAptcaList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetCanonicalConditionalAptcaList", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetDataHelper(System.String,System.Object,System.Security.IPermission)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string, object, global::System.Security.IPermission> SetDataHelperStringObjectIPermission
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDataHelper", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetDataHelper", typeof(string), typeof(object), typeof(global::System.Security.IPermission));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetData(System.String,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string, object> SetDataStringObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetData", typeof(string), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string, object, global::System.Security.IPermission> SetDataStringObjectIPermission
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetData", typeof(string), typeof(object), typeof(global::System.Security.IPermission));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetDynamicBase(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> SetDynamicBaseString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetDynamicBase", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetLegacyCasPolicyEnabled"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> SetLegacyCasPolicyEnabled
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLegacyCasPolicyEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetLegacyCasPolicyEnabled");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Principal.PrincipalPolicy> SetPrincipalPolicyPrincipalPolicy
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetPrincipalPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "SetPrincipalPolicy", typeof(global::System.Security.Principal.PrincipalPolicy));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetShadowCopyFiles"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> SetShadowCopyFiles
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetShadowCopyFiles");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetShadowCopyPath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string> SetShadowCopyPathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetShadowCopyPath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Principal.IPrincipal> SetThreadPrincipalIPrincipal
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetThreadPrincipal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "SetThreadPrincipal", typeof(global::System.Security.Principal.IPrincipal));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupApplicationHelper(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.ApplicationIdentity,System.ActivationContext,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, global::System.ApplicationIdentity, global::System.ActivationContext, string[]> SetupApplicationHelperEvidenceEvidenceApplicationIdentityActivationContextStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupApplicationHelper", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetupApplicationHelper", 
                         typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.Policy.Evidence), 
                         typeof(global::System.ApplicationIdentity), typeof(global::System.ActivationContext), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDefaultClickOnceDomain(System.String,System.String[],System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, string, string[], string[]> SetupDefaultClickOnceDomainStringStringArrayStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDefaultClickOnceDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetupDefaultClickOnceDomain", typeof(string), typeof(string).MakeArrayType(), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomain(System.Boolean,System.String,System.String,System.String[],System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, bool, string, string, string[], string[]> SetupDomainBooleanStringStringStringArrayStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetupDomain", 
                         typeof(bool), typeof(string), typeof(string), typeof(string).MakeArrayType(), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainForApplication(System.ActivationContext,System.String[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ActivationContext, string[]> SetupDomainForApplicationActivationContextStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainForApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetupDomainForApplication", typeof(global::System.ActivationContext), typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurity(System.Security.Policy.Evidence,System.IntPtr,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.IntPtr, bool> SetupDomainSecurityEvidenceIntPtrBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetupDomainSecurity", typeof(global::System.Security.Policy.Evidence), typeof(global::System.IntPtr), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurityForApplication(System.ApplicationIdentity,System.Security.Policy.ApplicationTrust)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ApplicationIdentity, global::System.Security.Policy.ApplicationTrust> SetupDomainSecurityForApplicationApplicationIdentityApplicationTrust
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurityForApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "SetupDomainSecurityForApplication", 
                                                                                                         typeof(global::System.ApplicationIdentity), typeof(global::System.Security.Policy.ApplicationTrust));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurityForHomogeneousDomain(System.Security.Policy.ApplicationTrust,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.Security.Policy.ApplicationTrust, bool> SetupDomainSecurityForHomogeneousDomainApplicationTrustBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurityForHomogeneousDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetupDomainSecurityForHomogeneousDomain", typeof(global::System.Security.Policy.ApplicationTrust), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupFusionStore(System.AppDomainSetup,System.AppDomainSetup)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.AppDomainSetup, global::System.AppDomainSetup> SetupFusionStoreAppDomainSetupAppDomainSetup
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupFusionStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "SetupFusionStore", typeof(global::System.AppDomainSetup), typeof(global::System.AppDomainSetup));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.SetupInformation"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, global::System.AppDomainSetup> SetupInformationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SetupInformation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_SetupInformation");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupLoaderOptimization(System.LoaderOptimization)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.LoaderOptimization> SetupLoaderOptimizationLoaderOptimization
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupLoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "SetupLoaderOptimization", typeof(global::System.LoaderOptimization));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomain.ShadowCopyFiles"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, bool> ShadowCopyFilesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "get_ShadowCopyFiles");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.System._AppDomain.GetTypeInfoCount(System.UInt32@)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutAction<global::System.AppDomain, uint> System_AppDomainGetTypeInfoCountUInt32Out
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System._AppDomain.GetTypeInfoCount", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                              (object)null, "System._AppDomain.GetTypeInfoCount", typeof(uint).MakeByRefType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, uint, uint, global::System.IntPtr> System_AppDomainGetTypeInfoUInt32UInt32IntPtr
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System._AppDomain.GetTypeInfo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, 
                         "System._AppDomain.GetTypeInfo", typeof(uint), typeof(uint), typeof(global::System.IntPtr));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.ToString"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, string> ToString01
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "ToString");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.TurnOnBindingRedirects"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> TurnOnBindingRedirects
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TurnOnBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, "TurnOnBindingRedirects");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_TypeResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> TypeResolveAddResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_TypeResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_TypeResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_TypeResolve(System.ResolveEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.ResolveEventHandler> TypeResolveRemoveResolveEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_TypeResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_TypeResolve", typeof(global::System.ResolveEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_UnhandledException(System.UnhandledExceptionEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.UnhandledExceptionEventHandler> UnhandledExceptionAddUnhandledExceptionEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_UnhandledException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "add_UnhandledException", typeof(global::System.UnhandledExceptionEventHandler));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_UnhandledException(System.UnhandledExceptionEventHandler)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain, global::System.UnhandledExceptionEventHandler> UnhandledExceptionRemoveUnhandledExceptionEventHandler
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_UnhandledException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                           (object)null, "remove_UnhandledException", typeof(global::System.UnhandledExceptionEventHandler));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.AppendPrivatePath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AppendPrivatePathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AppendPrivatePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "AppendPrivatePath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.ApplicationIdentity"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.ApplicationIdentity> ApplicationIdentityGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationIdentity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ApplicationIdentity>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_ApplicationIdentity");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.ApplicationTrust"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.ApplicationTrust> ApplicationTrustGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Policy.ApplicationTrust>
                                                                                              (value)), typeof(global::System.AppDomain), base.Instance, "get_ApplicationTrust");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ApplyPolicy(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> ApplyPolicyString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ApplyPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ApplyPolicy", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_AssemblyLoad(System.AssemblyLoadEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AssemblyLoadEventHandler> AssemblyLoadAddAssemblyLoadEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_AssemblyLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AssemblyLoadEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_AssemblyLoad", typeof(global::System.AssemblyLoadEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_AssemblyLoad(System.AssemblyLoadEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AssemblyLoadEventHandler> AssemblyLoadRemoveAssemblyLoadEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_AssemblyLoad", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AssemblyLoadEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_AssemblyLoad", typeof(global::System.AssemblyLoadEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_AssemblyResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> AssemblyResolveAddResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_AssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_AssemblyResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_AssemblyResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> AssemblyResolveRemoveResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_AssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_AssemblyResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.BaseDirectory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> BaseDirectoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_BaseDirectory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_BaseDirectory");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Moles.MAppDomain.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Moles.MAppDomain.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.AppDomain), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Moles.MAppDomain Bind(global::System._AppDomain target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<global::System.AppDomain, global::System.Moles.MAppDomain, global::System._AppDomain>
                (this, target);
            return this;
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Moles.MAppDomain Bind(global::System.Security.IEvidenceFactory target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<global::System.AppDomain, global::System.Moles.MAppDomain, global::System.Security.IEvidenceFactory>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckCreateDomainSupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckCreateDomainSupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckCreateDomainSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckCreateDomainSupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckDefinePInvokeSupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckDefinePInvokeSupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDefinePInvokeSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckDefinePInvokeSupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckDomainCreationEvidence(System.AppDomainSetup,System.Security.Policy.Evidence)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Security.Policy.Evidence> CheckDomainCreationEvidenceAppDomainSetupEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckDomainCreationEvidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                        "CheckDomainCreationEvidence", typeof(global::System.AppDomainSetup), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckLoadByteArraySupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckLoadByteArraySupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckLoadByteArraySupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckLoadByteArraySupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckLoadFileSupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckLoadFileSupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckLoadFileSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckLoadFileSupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckLoadFromSupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckLoadFromSupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckLoadFromSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckLoadFromSupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CheckReflectionOnlyLoadSupported"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action CheckReflectionOnlyLoadSupported
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckReflectionOnlyLoadSupported", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CheckReflectionOnlyLoadSupported");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ClearPrivatePath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ClearPrivatePath
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ClearPrivatePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ClearPrivatePath");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ClearShadowCopyPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action ClearShadowCopyPath
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ClearShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ClearShadowCopyPath");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateAppDomainManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CreateAppDomainManager
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateAppDomainManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateAppDomainManager");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Runtime.Remoting.ObjectHandle> CreateComInstanceFromStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateComInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateComInstanceFrom", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, global::System.Runtime.Remoting.ObjectHandle> CreateComInstanceFromStringStringByteArrayAssemblyHashAlgorithm
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateComInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string, 
                                                                                                      byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateComInstanceFrom", 
                     typeof(string), typeof(string), typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDefaultContext"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CreateDefaultContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDefaultContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateDefaultContext");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.AppDomain> CreateDomainString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CreateDomain", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomain> CreateDomainStringEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                     "CreateDomain", typeof(string), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain> CreateDomainStringEvidenceAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CreateDomain", 
                     typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.Security.PermissionSet, global::System.Security.Policy.StrongName[], global::System.AppDomain> CreateDomainStringEvidenceAppDomainSetupPermissionSetStrongNameArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CreateDomain", typeof(string), 
                     typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup), 
                     typeof(global::System.Security.PermissionSet), typeof(global::System.Security.Policy.StrongName).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, string, string, bool, global::System.AppDomain> CreateDomainStringEvidenceStringStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "CreateDomain", typeof(string), 
                     typeof(global::System.Security.Policy.Evidence), typeof(string), typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, string, string, bool, global::System.AppDomainInitializer, string[], global::System.AppDomain> CreateDomainStringEvidenceStringStringBooleanAppDomainInitializerStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                     "CreateDomain", typeof(string), typeof(global::System.Security.Policy.Evidence), 
                                                                                     typeof(string), typeof(string), typeof(bool), typeof(global::System.AppDomainInitializer), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object> CreateInstanceAndUnwrapStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string, object>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "CreateInstanceAndUnwrap", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object> CreateInstanceAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceAndUnwrap", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, object> CreateInstanceAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, object>(value)), typeof(global::System.AppDomain), base.Instance, 
                     "CreateInstanceAndUnwrap", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object[], object> CreateInstanceAndUnwrapStringStringObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string, object[], object>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, 
                                                                                       "CreateInstanceAndUnwrap", typeof(string), typeof(string), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object> CreateInstanceFromAndUnwrapStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string, object>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "CreateInstanceFromAndUnwrap", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object> CreateInstanceFromAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], object>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, object> CreateInstanceFromAndUnwrapStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, object>(value)), typeof(global::System.AppDomain), base.Instance, 
                     "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object[], object> CreateInstanceFromAndUnwrapStringStringObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFromAndUnwrap", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string, object[], object>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, 
                                                                                       "CreateInstanceFromAndUnwrap", typeof(string), typeof(string), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceFrom", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], 
                                                          global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceFrom", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceFrom", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceFromStringStringObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstanceFrom", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, object[], global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstanceFrom", typeof(string), typeof(string), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstance", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], 
                                                          global::System.Globalization.CultureInfo, object[], global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstance", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstance", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, object[], global::System.Runtime.Remoting.ObjectHandle> CreateInstanceStringStringObjectArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateInstance", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, object[], global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateInstance", typeof(string), typeof(string), typeof(object).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.CreateRemotingData"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action CreateRemotingData
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateRemotingData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "CreateRemotingData");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.CurrentDomain"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain> CurrentDomainGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CurrentDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "get_CurrentDomain");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, 
                                                                                       "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                                                                                            global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                                                                                                                                                                typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessEvidencePermissionSetPermissionSetPermissionSet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.Policy.Evidence, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Security.PermissionSet, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                       typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(global::System.Security.Policy.Evidence), 
                                                                                       typeof(global::System.Security.PermissionSet), 
                                                                                       typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessIEnumerableOfCustomAttributeBuilder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                                                                                            global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, 
                                                                                                                            global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), base.Instance, 
                     "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                                                                                              typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Security.SecurityContextSource, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessIEnumerableOfCustomAttributeBuilderSecurityContextSource
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                          global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, 
                                                          global::System.Security.SecurityContextSource, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", 
                     typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                     typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>), 
                     typeof(global::System.Security.SecurityContextSource));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessPermissionSetPermissionSetPermissionSet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                          global::System.Security.PermissionSet, global::System.Security.PermissionSet, 
                                                          global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), 
                     base.Instance, "DefineDynamicAssembly", 
                     typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                     typeof(global::System.Security.PermissionSet), 
                     typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                                                                                                                                                                                                          typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringBooleanIEnumerableOfCustomAttributeBuilder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                          string, bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, 
                                                                        global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", 
                     typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), 
                                                                                                                                   typeof(bool), typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, 
                                                          string, global::System.Security.Policy.Evidence, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", 
                     typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                     typeof(string), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, string, 
                                                                                                                                                 global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                       typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), typeof(global::System.Security.Policy.Evidence), 
                                                                                       typeof(global::System.Security.PermissionSet), 
                                                                                       typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, bool, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Security.PermissionSet, 
                                                                                                                                                 global::System.Security.PermissionSet, bool, global::System.Reflection.Emit.AssemblyBuilder>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, 
                                                                                       "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                                                                                       typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.PermissionSet), 
                                                                                       typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable`1{System.Reflection.Emit.CustomAttributeBuilder})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringEvidencePermissionSetPermissionSetPermissionSetBooleanIEnumerableOfCustomAttributeBuilder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.Policy.Evidence, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, 
                                                                                                                                                 bool, global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>, 
                                                                                                                                                       global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), base.Instance, 
                                                                                       "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), 
                                                                                       typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.PermissionSet), 
                                                                                       typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet), 
                                                                                       typeof(bool), typeof(global::System.Collections.Generic.IEnumerable<global::System.Reflection.Emit.CustomAttributeBuilder>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Emit.AssemblyBuilderAccess, string, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder> DefineDynamicAssemblyAssemblyNameAssemblyBuilderAccessStringPermissionSetPermissionSetPermissionSet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DefineDynamicAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Reflection.Emit.AssemblyBuilderAccess, string, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Security.PermissionSet, 
                                                                                                                                                 global::System.Security.PermissionSet, global::System.Reflection.Emit.AssemblyBuilder>(value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "DefineDynamicAssembly", typeof(global::System.Reflection.AssemblyName), 
                                                                                       typeof(global::System.Reflection.Emit.AssemblyBuilderAccess), typeof(string), typeof(global::System.Security.PermissionSet), 
                                                                                                                                                                     typeof(global::System.Security.PermissionSet), typeof(global::System.Security.PermissionSet));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Deserialize(System.Byte[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], object> DeserializeByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Deserialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "Deserialize", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DisableFusionUpdatesFromADManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisableFusionUpdatesFromADManager
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DisableFusionUpdatesFromADManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "DisableFusionUpdatesFromADManager");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.CrossAppDomainDelegate> DoCallBackCrossAppDomainDelegate
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("DoCallBack", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.CrossAppDomainDelegate>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "DoCallBack", typeof(global::System.CrossAppDomainDelegate));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.DomainManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager> DomainManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DomainManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AppDomainManager>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_DomainManager");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_DomainUnload(System.EventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler> DomainUnloadAddEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_DomainUnload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.EventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_DomainUnload", typeof(global::System.EventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_DomainUnload(System.EventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler> DomainUnloadRemoveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_DomainUnload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.EventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_DomainUnload", typeof(global::System.EventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.DynamicDirectory"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DynamicDirectoryGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DynamicDirectory", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_DynamicDirectory");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.EnableResolveAssembliesForIntrospection(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> EnableResolveAssembliesForIntrospectionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EnableResolveAssembliesForIntrospection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "EnableResolveAssembliesForIntrospection", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.Evidence"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.Evidence> EvidenceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Evidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_Evidence");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.EvidenceNoDemand"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.Evidence> EvidenceNoDemandGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EvidenceNoDemand", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "get_EvidenceNoDemand");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyByNameAssemblyNameEvidenceStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Security.Policy.Evidence, string[], int>
                                                   (value)), typeof(global::System.AppDomain), base.Instance, "ExecuteAssemblyByName", typeof(global::System.Reflection.AssemblyName), 
                                                                                                                                                                                                                                       typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, string[], int> ExecuteAssemblyByNameAssemblyNameStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, string[], int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "ExecuteAssemblyByName", typeof(global::System.Reflection.AssemblyName), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int> ExecuteAssemblyByNameString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ExecuteAssemblyByName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, int> ExecuteAssemblyByNameStringEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "ExecuteAssemblyByName", typeof(string), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyByNameStringEvidenceStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, string[], int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "ExecuteAssemblyByName", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string[], int> ExecuteAssemblyByNameStringStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssemblyByName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string[], int>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "ExecuteAssemblyByName", typeof(string), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int> ExecuteAssemblyString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ExecuteAssembly", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, int> ExecuteAssemblyStringEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ExecuteAssembly", typeof(string), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, string[], int> ExecuteAssemblyStringEvidenceStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, string[], int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "ExecuteAssembly", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int> ExecuteAssemblyStringEvidenceStringArrayByteArrayAssemblyHashAlgorithm
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, 
                                                                                                                                                 string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int>(value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "ExecuteAssembly", typeof(string), typeof(global::System.Security.Policy.Evidence), 
                                                                                                                                                                                                                                                                                    typeof(string).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string[], int> ExecuteAssemblyStringStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string[], int>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "ExecuteAssembly", typeof(string), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int> ExecuteAssemblyStringStringArrayByteArrayAssemblyHashAlgorithm
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ExecuteAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string[], byte[], global::System.Configuration.Assemblies.AssemblyHashAlgorithm, int>
                                                   (value)), typeof(global::System.AppDomain), base.Instance, "ExecuteAssembly", typeof(string), typeof(string).MakeArrayType(), 
                                                                                                                                                                                                                                                        typeof(byte).MakeArrayType(), typeof(global::System.Configuration.Assemblies.AssemblyHashAlgorithm));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_FirstChanceException(System.EventHandler`1{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>> FirstChanceExceptionAddEventHandlerOfFirstChanceExceptionEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_FirstChanceException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, 
                                                                                                      global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                                                                                                                                                                                                                      "add_FirstChanceException", typeof(global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_FirstChanceException(System.EventHandler`1{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>> FirstChanceExceptionRemoveEventHandlerOfFirstChanceExceptionEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_FirstChanceException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, 
                                                                                                      global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "remove_FirstChanceException", 
                                                                                                                                                                                                                                     typeof(global::System.EventHandler<global::System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.FriendlyName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> FriendlyNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FriendlyName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_FriendlyName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.FusionStore"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup> FusionStoreGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_FusionStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AppDomainSetup>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "get_FusionStore");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetAppDomainManagerType(System.String@,System.String@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutOutAction<string, string> GetAppDomainManagerTypeStringOutStringOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "GetAppDomainManagerType", typeof(string).MakeByRefType(), typeof(string).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.Assembly[]> GetAssemblies
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.Assembly[]>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "GetAssemblies");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetData(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, object> GetDataString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, object>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "GetData", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetDefaultContext"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Runtime.Remoting.Contexts.Context> GetDefaultContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDefaultContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Runtime.Remoting.Contexts.Context>
                                                                                                 (value)), typeof(global::System.AppDomain), base.Instance, "GetDefaultContext");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetHomogenousGrantSet(System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.Evidence, global::System.Security.PermissionSet> GetHomogenousGrantSetEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHomogenousGrantSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.PermissionSet>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "GetHomogenousGrantSet", typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetHostEvidence(System.Type)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type, global::System.Security.Policy.EvidenceBase> GetHostEvidenceType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetHostEvidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Type, global::System.Security.Policy.EvidenceBase>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "GetHostEvidence", typeof(global::System.Type));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetIdForUnload(System.AppDomain)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomain, int> GetIdForUnloadAppDomain
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetIdForUnload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "GetIdForUnload", typeof(global::System.AppDomain));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetTargetFrameworkName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetTargetFrameworkName
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "GetTargetFrameworkName");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetThreadPrincipal"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Principal.IPrincipal> GetThreadPrincipal
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetThreadPrincipal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Principal.IPrincipal>(value)
                                                                                                                   ), typeof(global::System.AppDomain), base.Instance, "GetThreadPrincipal");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.GetType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Type> GetType
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Type>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "GetType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.HostSecurityManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.HostSecurityManager> HostSecurityManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostSecurityManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.HostSecurityManager>(value)
                                                                                            ), typeof(global::System.AppDomain), base.Instance, "get_HostSecurityManager");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.Id"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> IdGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Id", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, int>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_Id");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeCompatibilityFlags"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InitializeCompatibilityFlags
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeCompatibilityFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InitializeCompatibilityFlags");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeDomainSecurity(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Boolean,System.IntPtr,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, bool, global::System.IntPtr, bool> InitializeDomainSecurityEvidenceEvidenceBooleanIntPtrBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeDomainSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, 
                                                          bool, global::System.IntPtr, bool>(value)), typeof(global::System.AppDomain), base.Instance, "InitializeDomainSecurity", 
                     typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.Policy.Evidence), 
                     typeof(bool), typeof(global::System.IntPtr), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InitializeLifetimeService"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object> InitializeLifetimeService
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeLifetimeService", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, object>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InitializeLifetimeService");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateDomainSetup(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.AppDomainSetup> InternalCreateDomainSetupString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateDomainSetup", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "InternalCreateDomainSetup", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateDomain(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.AppDomain> InternalCreateDomainString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "InternalCreateDomain", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain> InternalCreateDomainStringEvidenceAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "InternalCreateDomain", 
                     typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceFromWithNoSecurity(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceFromWithNoSecurityStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceFromWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalCreateInstanceFromWithNoSecurity", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceFromWithNoSecurity(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceFromWithNoSecurityStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceFromWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalCreateInstanceFromWithNoSecurity", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceWithNoSecurity(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceWithNoSecurityStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalCreateInstanceWithNoSecurity", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalCreateInstanceWithNoSecurity(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, bool, global::System.Reflection.BindingFlags, global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle> InternalCreateInstanceWithNoSecurityStringStringBooleanBindingFlagsBinderObjectArrayCultureInfoObjectArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCreateInstanceWithNoSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, string, bool, global::System.Reflection.BindingFlags, 
                                                          global::System.Reflection.Binder, object[], global::System.Globalization.CultureInfo, 
                                                          object[], global::System.Security.Policy.Evidence, global::System.Runtime.Remoting.ObjectHandle>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalCreateInstanceWithNoSecurity", typeof(string), typeof(string), 
                     typeof(bool), typeof(global::System.Reflection.BindingFlags), typeof(global::System.Reflection.Binder), 
                     typeof(object).MakeArrayType(), typeof(global::System.Globalization.CultureInfo), 
                     typeof(object).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.InternalEvidence"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.Evidence> InternalEvidenceGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InternalEvidence", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "get_InternalEvidence");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetCachePath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InternalSetCachePathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetCachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetCachePath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetDomainContext(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InternalSetDomainContextString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetDomainContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetDomainContext", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetDynamicBase(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InternalSetDynamicBaseString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetDynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetDynamicBase", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetPrivateBinPath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InternalSetPrivateBinPathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetPrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetPrivateBinPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetShadowCopyFiles"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action InternalSetShadowCopyFiles
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetShadowCopyFiles");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.InternalSetShadowCopyPath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> InternalSetShadowCopyPathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "InternalSetShadowCopyPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsAppXDesignMode"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAppXDesignMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAppXDesignMode", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "IsAppXDesignMode");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsAppXModel"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAppXModel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsAppXModel", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "IsAppXModel");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsAppXNGen"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAppXNGenGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAppXNGen", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "get_IsAppXNGen");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool?> IsCompatibilitySwitchSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsCompatibilitySwitchSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, bool?>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "IsCompatibilitySwitchSet", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.IsDefaultAppDomain"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsDefaultAppDomain
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsDefaultAppDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "IsDefaultAppDomain");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsFullyTrusted"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsFullyTrustedGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsFullyTrusted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_IsFullyTrusted");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsHomogenous"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsHomogenousGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsHomogenous", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_IsHomogenous");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.IsLegacyCasPolicyEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsLegacyCasPolicyEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsLegacyCasPolicyEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_IsLegacyCasPolicyEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Reflection.Assembly> LoadAssemblyName
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, global::System.Reflection.Assembly>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "Load", typeof(global::System.Reflection.AssemblyName));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.AssemblyName, global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadAssemblyNameEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.AssemblyName, 
                                                                                                                                                 global::System.Security.Policy.Evidence, global::System.Reflection.Assembly>(value)), typeof(global::System.AppDomain), base.Instance, 
                                                                                       "Load", typeof(global::System.Reflection.AssemblyName), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], global::System.Reflection.Assembly> LoadByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, byte[], global::System.Reflection.Assembly>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "Load", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], byte[], global::System.Reflection.Assembly> LoadByteArrayByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, byte[], byte[], global::System.Reflection.Assembly>
                                                                                              (value)), typeof(global::System.AppDomain), base.Instance, "Load", typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], byte[], global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadByteArrayByteArrayEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, byte[], byte[], global::System.Security.Policy.Evidence, global::System.Reflection.Assembly>
                                                   (value)), typeof(global::System.AppDomain), base.Instance, 
                     "Load", typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Reflection.Assembly> LoadString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, global::System.Reflection.Assembly>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "Load", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Load(System.String,System.Security.Policy.Evidence)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.Reflection.Assembly> LoadStringEvidence
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Load", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, string, global::System.Security.Policy.Evidence, global::System.Reflection.Assembly>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "Load", typeof(string), typeof(global::System.Security.Policy.Evidence));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.LocalStore"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.Dictionary<string, object[]>> LocalStoreGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LocalStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Collections.Generic.Dictionary<string, object[]>>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_LocalStore");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.MarshalObject(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, byte[]> MarshalObjectObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarshalObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "MarshalObject", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.MarshalObjects(System.Object,System.Object,System.Byte[]@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<object, object, byte[], byte[]> MarshalObjectsObjectObjectByteArrayOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("MarshalObjects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "MarshalObjects", 
                     typeof(object), typeof(object), typeof(byte).MakeArrayType()
                                                         .MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringIsEnabled"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> MonitoringIsEnabledGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringIsEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "get_MonitoringIsEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringIsEnabled"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> MonitoringIsEnabledSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_MonitoringIsEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "set_MonitoringIsEnabled", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringSurvivedMemorySize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MonitoringSurvivedMemorySizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringSurvivedMemorySize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, long>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_MonitoringSurvivedMemorySize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringSurvivedProcessMemorySize"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MonitoringSurvivedProcessMemorySizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringSurvivedProcessMemorySize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "get_MonitoringSurvivedProcessMemorySize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringTotalAllocatedMemorySize"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> MonitoringTotalAllocatedMemorySizeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringTotalAllocatedMemorySize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, long>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_MonitoringTotalAllocatedMemorySize");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.MonitoringTotalProcessorTime"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.TimeSpan> MonitoringTotalProcessorTimeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MonitoringTotalProcessorTime", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.TimeSpan>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_MonitoringTotalProcessorTime");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.OnDesignerNamespaceResolveEvent(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string[]> OnDesignerNamespaceResolveEventString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("OnDesignerNamespaceResolveEvent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string[]>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "OnDesignerNamespaceResolveEvent", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.PartialTrustVisibleAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[]> PartialTrustVisibleAssembliesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string[]>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_PartialTrustVisibleAssemblies");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.PartialTrustVisibleAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string[]> PartialTrustVisibleAssembliesSetStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string[]>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "set_PartialTrustVisibleAssemblies", typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.PermissionSet"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.PermissionSet> PermissionSetGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PermissionSet", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.PermissionSet>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_PermissionSet");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.PrepareDataForSetup(System.String,System.AppDomainSetup,System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.IntPtr,System.String,System.String[],System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.AppDomainSetup, global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, global::System.IntPtr, string, string[], string[], object> PrepareDataForSetupStringAppDomainSetupEvidenceEvidenceIntPtrStringStringArrayStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("PrepareDataForSetup", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic((global::System.Delegate)value, typeof(global::System.AppDomain), 
                                                                                        "PrepareDataForSetup", typeof(string), typeof(global::System.AppDomainSetup), 
                                                                                        typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.Policy.Evidence), typeof(global::System.IntPtr), 
                                                                                        typeof(string), typeof(string).MakeArrayType(), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ProcessExit(System.EventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler> ProcessExitAddEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ProcessExit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.EventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_ProcessExit", typeof(global::System.EventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ProcessExit(System.EventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.EventHandler> ProcessExitRemoveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ProcessExit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.EventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_ProcessExit", typeof(global::System.EventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.ProfileAPICheck"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ProfileAPICheckGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ProfileAPICheck", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "get_ProfileAPICheck");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ReflectionOnlyAssemblyResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> ReflectionOnlyAssemblyResolveAddResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ReflectionOnlyAssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_ReflectionOnlyAssemblyResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ReflectionOnlyAssemblyResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> ReflectionOnlyAssemblyResolveRemoveResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ReflectionOnlyAssemblyResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_ReflectionOnlyAssemblyResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ReflectionOnlyGetAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.Assembly[]> ReflectionOnlyGetAssemblies
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReflectionOnlyGetAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Reflection.Assembly[]>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "ReflectionOnlyGetAssemblies");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.RelativeSearchPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> RelativeSearchPathGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RelativeSearchPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_RelativeSearchPath");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ResolveAssemblyForIntrospection(System.Object,System.ResolveEventArgs)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, global::System.ResolveEventArgs, global::System.Reflection.Assembly> ResolveAssemblyForIntrospectionObjectResolveEventArgs
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ResolveAssemblyForIntrospection", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, object, global::System.ResolveEventArgs, global::System.Reflection.Assembly>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "ResolveAssemblyForIntrospection", typeof(object), typeof(global::System.ResolveEventArgs));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_ResourceResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> ResourceResolveAddResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_ResourceResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_ResourceResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_ResourceResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> ResourceResolveRemoveResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_ResourceResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_ResourceResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.RunDomainManagerPostInitialization(System.AppDomainManager)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManager> RunDomainManagerPostInitializationAppDomainManager
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RunDomainManagerPostInitialization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AppDomainManager>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "RunDomainManagerPostInitialization", typeof(global::System.AppDomainManager));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.RunInitializer(System.AppDomainSetup)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup> RunInitializerAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RunInitializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "RunInitializer", typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Serialize(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, byte[]> SerializeObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Serialize", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "Serialize", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetAppDomainManagerType(System.String,System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string> SetAppDomainManagerTypeStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetAppDomainManagerType", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.PolicyLevel> SetAppDomainPolicyPolicyLevel
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAppDomainPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Policy.PolicyLevel>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "SetAppDomainPolicy", typeof(global::System.Security.Policy.PolicyLevel));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetCachePath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> SetCachePathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetCachePath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetCanonicalConditionalAptcaList(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> SetCanonicalConditionalAptcaListString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCanonicalConditionalAptcaList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetCanonicalConditionalAptcaList", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetDataHelper(System.String,System.Object,System.Security.IPermission)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object, global::System.Security.IPermission> SetDataHelperStringObjectIPermission
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDataHelper", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, object, global::System.Security.IPermission>
                                                                                                                       (value)), typeof(global::System.AppDomain), base.Instance, 
                                                                                          "SetDataHelper", typeof(string), typeof(object), typeof(global::System.Security.IPermission));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetData(System.String,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object> SetDataStringObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, object>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetData", typeof(string), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, object, global::System.Security.IPermission> SetDataStringObjectIPermission
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetData", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, object, global::System.Security.IPermission>
                                                                                                                    (value)), typeof(global::System.AppDomain), base.Instance, 
                                                                                       "SetData", typeof(string), typeof(object), typeof(global::System.Security.IPermission));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetDynamicBase(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> SetDynamicBaseString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetDynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetDynamicBase", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetLegacyCasPolicyEnabled"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetLegacyCasPolicyEnabled
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLegacyCasPolicyEnabled", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetLegacyCasPolicyEnabled");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Principal.PrincipalPolicy> SetPrincipalPolicyPrincipalPolicy
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetPrincipalPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Principal.PrincipalPolicy>
                                                                                              (value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "SetPrincipalPolicy", typeof(global::System.Security.Principal.PrincipalPolicy));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetShadowCopyFiles"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action SetShadowCopyFiles
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetShadowCopyFiles");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetShadowCopyPath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> SetShadowCopyPathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetShadowCopyPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetShadowCopyPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Principal.IPrincipal> SetThreadPrincipalIPrincipal
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetThreadPrincipal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.Security.Principal.IPrincipal>(value)
                                                                                                                ), typeof(global::System.AppDomain), base.Instance, "SetThreadPrincipal", typeof(global::System.Security.Principal.IPrincipal));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupApplicationHelper(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.ApplicationIdentity,System.ActivationContext,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, global::System.ApplicationIdentity, global::System.ActivationContext, string[]> SetupApplicationHelperEvidenceEvidenceApplicationIdentityActivationContextStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupApplicationHelper", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.Security.Policy.Evidence, 
                                                          global::System.ApplicationIdentity, global::System.ActivationContext, string[]>(value)), typeof(global::System.AppDomain), 
                     base.Instance, "SetupApplicationHelper", 
                     typeof(global::System.Security.Policy.Evidence), typeof(global::System.Security.Policy.Evidence), 
                     typeof(global::System.ApplicationIdentity), typeof(global::System.ActivationContext), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDefaultClickOnceDomain(System.String,System.String[],System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, string[], string[]> SetupDefaultClickOnceDomainStringStringArrayStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDefaultClickOnceDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string, string[], string[]>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, 
                                                                                          "SetupDefaultClickOnceDomain", typeof(string), typeof(string).MakeArrayType(), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomain(System.Boolean,System.String,System.String,System.String[],System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool, string, string, string[], string[]> SetupDomainBooleanStringStringStringArrayStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool, string, string, string[], string[]>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "SetupDomain", 
                                                                                          typeof(bool), typeof(string), typeof(string), typeof(string).MakeArrayType(), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainForApplication(System.ActivationContext,System.String[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ActivationContext, string[]> SetupDomainForApplicationActivationContextStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainForApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ActivationContext, string[]>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, 
                                                                                          "SetupDomainForApplication", typeof(global::System.ActivationContext), typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurity(System.Security.Policy.Evidence,System.IntPtr,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.Evidence, global::System.IntPtr, bool> SetupDomainSecurityEvidenceIntPtrBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurity", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Security.Policy.Evidence, global::System.IntPtr, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "SetupDomainSecurity", typeof(global::System.Security.Policy.Evidence), typeof(global::System.IntPtr), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurityForApplication(System.ApplicationIdentity,System.Security.Policy.ApplicationTrust)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ApplicationIdentity, global::System.Security.Policy.ApplicationTrust> SetupDomainSecurityForApplicationApplicationIdentityApplicationTrust
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurityForApplication", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.ApplicationIdentity, global::System.Security.Policy.ApplicationTrust>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "SetupDomainSecurityForApplication", 
                                                                                                                                                                                    typeof(global::System.ApplicationIdentity), typeof(global::System.Security.Policy.ApplicationTrust));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupDomainSecurityForHomogeneousDomain(System.Security.Policy.ApplicationTrust,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.ApplicationTrust, bool> SetupDomainSecurityForHomogeneousDomainApplicationTrustBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDomainSecurityForHomogeneousDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.Security.Policy.ApplicationTrust, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "SetupDomainSecurityForHomogeneousDomain", typeof(global::System.Security.Policy.ApplicationTrust), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupFusionStore(System.AppDomainSetup,System.AppDomainSetup)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.AppDomainSetup> SetupFusionStoreAppDomainSetupAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupFusionStore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomain, global::System.AppDomainSetup, global::System.AppDomainSetup>(value)), 
                     typeof(global::System.AppDomain), base.Instance, 
                     "SetupFusionStore", typeof(global::System.AppDomainSetup), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.SetupInformation"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup> SetupInformationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SetupInformation", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.AppDomainSetup>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "get_SetupInformation");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.SetupLoaderOptimization(System.LoaderOptimization)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.LoaderOptimization> SetupLoaderOptimizationLoaderOptimization
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupLoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.LoaderOptimization>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, "SetupLoaderOptimization", typeof(global::System.LoaderOptimization));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Setup(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<object, object> SetupObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Setup", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "Setup", typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomain.ShadowCopyFiles"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> ShadowCopyFilesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, bool>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "get_ShadowCopyFiles");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.System._AppDomain.GetTypeInfoCount(System.UInt32@)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.OutAction<uint> System_AppDomainGetTypeInfoCountUInt32Out
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System._AppDomain.GetTypeInfoCount", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, uint>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "System._AppDomain.GetTypeInfoCount", typeof(uint).MakeByRefType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<uint, uint, global::System.IntPtr> System_AppDomainGetTypeInfoUInt32UInt32IntPtr
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("System._AppDomain.GetTypeInfo", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, uint, uint, global::System.IntPtr>(value)), 
                                                                                          typeof(global::System.AppDomain), base.Instance, 
                                                                                          "System._AppDomain.GetTypeInfo", typeof(uint), typeof(uint), typeof(global::System.IntPtr));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.ToString"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ToString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToString", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, string>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "ToString");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.TurnOnBindingRedirects"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action TurnOnBindingRedirects
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("TurnOnBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomain), base.Instance, "TurnOnBindingRedirects");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_TypeResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> TypeResolveAddResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_TypeResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "add_TypeResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_TypeResolve(System.ResolveEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.ResolveEventHandler> TypeResolveRemoveResolveEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_TypeResolve", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.ResolveEventHandler>(value)), 
                                                                                       typeof(global::System.AppDomain), base.Instance, "remove_TypeResolve", typeof(global::System.ResolveEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.add_UnhandledException(System.UnhandledExceptionEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.UnhandledExceptionEventHandler> UnhandledExceptionAddUnhandledExceptionEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("add_UnhandledException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.UnhandledExceptionEventHandler>
                                                                                              (value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "add_UnhandledException", typeof(global::System.UnhandledExceptionEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.remove_UnhandledException(System.UnhandledExceptionEventHandler)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.UnhandledExceptionEventHandler> UnhandledExceptionRemoveUnhandledExceptionEventHandler
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("remove_UnhandledException", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomain, global::System.UnhandledExceptionEventHandler>
                                                                                              (value)), typeof(global::System.AppDomain), 
                                                                                       base.Instance, "remove_UnhandledException", typeof(global::System.UnhandledExceptionEventHandler));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.Unload(System.AppDomain)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomain> UnloadAppDomain
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Unload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "Unload", typeof(global::System.AppDomain));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.UnmarshalObject(System.Byte[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], object> UnmarshalObjectByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UnmarshalObject", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "UnmarshalObject", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomain.UnmarshalObjects(System.Byte[],System.Byte[],System.Object@)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.OutFunc<byte[], byte[], object, object> UnmarshalObjectsByteArrayByteArrayObjectOut
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UnmarshalObjects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomain), "UnmarshalObjects", 
                     typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(object).MakeByRefType());
            }
        }
    }
}
namespace System.Moles
{
    /// <summary>Mole type of <see cref="T:System.AppDomainManager"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.AppDomainManager))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AppDomainManager")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAppDomainManager
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.AppDomainManager>
    {
        /// <summary>Initializes a new mole</summary>
        public MAppDomainManager()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAppDomainManager(global::System.AppDomainManager instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.ApplicationActivator"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.Runtime.Hosting.ApplicationActivator> ApplicationActivatorGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationActivator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "get_ApplicationActivator");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.Security.SecurityState, bool> CheckSecuritySettingsSecurityState
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckSecuritySettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), 
                         (object)null, "CheckSecuritySettings", typeof(global::System.Security.SecurityState));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain> CreateDomainStringEvidenceAppDomainSetup
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, 
                         "CreateDomain", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.EntryAssembly"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.Reflection.Assembly> EntryAssemblyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EntryAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "get_EntryAssembly");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.HostExecutionContextManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.Threading.HostExecutionContextManager> HostExecutionContextManagerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostExecutionContextManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "get_HostExecutionContextManager");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.HostSecurityManager"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.Security.HostSecurityManager> HostSecurityManagerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostSecurityManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "get_HostSecurityManager");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.InitializationFlags"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager, global::System.AppDomainManagerInitializationOptions> InitializationFlagsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InitializationFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "get_InitializationFlags");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.InitializationFlags"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManager, global::System.AppDomainManagerInitializationOptions> InitializationFlagsSetAppDomainManagerInitializationOptions
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_InitializationFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), 
                         (object)null, "set_InitializationFlags", typeof(global::System.AppDomainManagerInitializationOptions));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManager, global::System.AppDomainSetup> InitializeNewDomainAppDomainSetup
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeNewDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), 
                         (object)null, "InitializeNewDomain", typeof(global::System.AppDomainSetup));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.RegisterWithHost"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManager> RegisterWithHost
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RegisterWithHost", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, "RegisterWithHost");
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.ApplicationActivator"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Runtime.Hosting.ApplicationActivator> ApplicationActivatorGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationActivator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainManager, global::System.Runtime.Hosting.ApplicationActivator>(value)), 
                     typeof(global::System.AppDomainManager), base.Instance, "get_ApplicationActivator");
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Moles.MAppDomainManager.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Moles.MAppDomainManager.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.AppDomainManager), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.SecurityState, bool> CheckSecuritySettingsSecurityState
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckSecuritySettings", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager, global::System.Security.SecurityState, bool>
                                                                                              (value)), typeof(global::System.AppDomainManager), 
                                                                                       base.Instance, "CheckSecuritySettings", typeof(global::System.Security.SecurityState));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManager> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainManager), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain> CreateDomainHelperStringEvidenceAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomainHelper", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainManager), "CreateDomainHelper", 
                     typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain> CreateDomainStringEvidenceAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CreateDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager, string, 
                                                                                                      global::System.Security.Policy.Evidence, global::System.AppDomainSetup, global::System.AppDomain>(value)), 
                     typeof(global::System.AppDomainManager), base.Instance, 
                     "CreateDomain", typeof(string), typeof(global::System.Security.Policy.Evidence), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.CurrentAppDomainManager"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManager> CurrentAppDomainManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CurrentAppDomainManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainManager), "get_CurrentAppDomainManager");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.EntryAssembly"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Reflection.Assembly> EntryAssemblyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_EntryAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager, global::System.Reflection.Assembly>(value)), 
                                                                                       typeof(global::System.AppDomainManager), base.Instance, "get_EntryAssembly");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.HostExecutionContextManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.HostExecutionContextManager> HostExecutionContextManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostExecutionContextManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainManager, global::System.Threading.HostExecutionContextManager>(value)), 
                     typeof(global::System.AppDomainManager), base.Instance, "get_HostExecutionContextManager");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.HostSecurityManager"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.HostSecurityManager> HostSecurityManagerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostSecurityManager", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager, global::System.Security.HostSecurityManager>
                                                                                              (value)), typeof(global::System.AppDomainManager), base.Instance, "get_HostSecurityManager");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.InitializationFlags"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainManagerInitializationOptions> InitializationFlagsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_InitializationFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainManager, global::System.AppDomainManagerInitializationOptions>(value)), 
                     typeof(global::System.AppDomainManager), base.Instance, "get_InitializationFlags");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainManager.InitializationFlags"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainManagerInitializationOptions> InitializationFlagsSetAppDomainManagerInitializationOptions
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_InitializationFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainManager, global::System.AppDomainManagerInitializationOptions>(value)), 
                     typeof(global::System.AppDomainManager), 
                     base.Instance, "set_InitializationFlags", typeof(global::System.AppDomainManagerInitializationOptions));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup> InitializeNewDomainAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InitializeNewDomain", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager, global::System.AppDomainSetup>(value)), 
                                                                                       typeof(global::System.AppDomainManager), base.Instance, "InitializeNewDomain", typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainManager.RegisterWithHost"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action RegisterWithHost
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RegisterWithHost", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainManager>(value)), 
                     typeof(global::System.AppDomainManager), base.Instance, "RegisterWithHost");
            }
        }
    }
}
namespace System.Moles
{
    /// <summary>Mole type of <see cref="T:System.AppDomainSetup"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.AppDomainSetup))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AppDomainSetup")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAppDomainSetup
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.AppDomainSetup>
    {
        /// <summary>Initializes a new mole</summary>
        public MAppDomainSetup()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAppDomainSetup(global::System.AppDomainSetup instance)
        : base(instance)
        {
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ActivationArguments"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Runtime.Hosting.ActivationArguments> ActivationArgumentsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActivationArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Runtime.Hosting.ActivationArguments>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ActivationArguments");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ActivationArguments"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Runtime.Hosting.ActivationArguments> ActivationArgumentsSetActivationArguments
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ActivationArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Runtime.Hosting.ActivationArguments>(value)), 
                     typeof(global::System.AppDomainSetup), 
                     base.Instance, "set_ActivationArguments", typeof(global::System.Runtime.Hosting.ActivationArguments));
            }
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ActivationArguments"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.Runtime.Hosting.ActivationArguments> ActivationArgumentsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ActivationArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ActivationArguments");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ActivationArguments"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Runtime.Hosting.ActivationArguments> ActivationArgumentsSetActivationArguments
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ActivationArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_ActivationArguments", typeof(global::System.Runtime.Hosting.ActivationArguments));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializerArguments"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string[]> AppDomainInitializerArgumentsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainInitializerArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_AppDomainInitializerArguments");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializerArguments"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string[]> AppDomainInitializerArgumentsSetStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainInitializerArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_AppDomainInitializerArguments", typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.AppDomainInitializer> AppDomainInitializerGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainInitializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_AppDomainInitializer");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.AppDomainInitializer> AppDomainInitializerSetAppDomainInitializer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainInitializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_AppDomainInitializer", typeof(global::System.AppDomainInitializer));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerAssembly"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> AppDomainManagerAssemblyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainManagerAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_AppDomainManagerAssembly");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerAssembly"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> AppDomainManagerAssemblySetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainManagerAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_AppDomainManagerAssembly", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> AppDomainManagerTypeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_AppDomainManagerType");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerType"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> AppDomainManagerTypeSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_AppDomainManagerType", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationBase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ApplicationBaseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ApplicationBase");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationBase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> ApplicationBaseSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_ApplicationBase", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ApplicationNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ApplicationName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> ApplicationNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_ApplicationName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationTrust"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust> ApplicationTrustGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ApplicationTrust");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationTrust"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust> ApplicationTrustSetApplicationTrust
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_ApplicationTrust", typeof(global::System.Security.Policy.ApplicationTrust));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.BuildShadowCopyDirectories"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> BuildShadowCopyDirectories
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "BuildShadowCopyDirectories");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CachePath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> CachePathGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_CachePath");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CachePath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> CachePathSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_CachePath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CheckedForTargetFrameworkName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> CheckedForTargetFrameworkNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CheckedForTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_CheckedForTargetFrameworkName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CheckedForTargetFrameworkName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> CheckedForTargetFrameworkNameSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CheckedForTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_CheckedForTargetFrameworkName", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFile"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ConfigurationFileGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ConfigurationFile");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFileInternal"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ConfigurationFileInternalGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationFileInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ConfigurationFileInternal");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFile"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> ConfigurationFileSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConfigurationFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_ConfigurationFile", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DeveloperPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> DeveloperPathGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DeveloperPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DeveloperPath");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DeveloperPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> DeveloperPathSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DeveloperPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DeveloperPath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowApplicationBaseProbing"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> DisallowApplicationBaseProbingGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowApplicationBaseProbing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DisallowApplicationBaseProbing");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowApplicationBaseProbing"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> DisallowApplicationBaseProbingSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowApplicationBaseProbing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DisallowApplicationBaseProbing", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowBindingRedirects"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> DisallowBindingRedirectsGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DisallowBindingRedirects");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowBindingRedirects"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> DisallowBindingRedirectsSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DisallowBindingRedirects", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowCodeDownload"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> DisallowCodeDownloadGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowCodeDownload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DisallowCodeDownload");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowCodeDownload"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> DisallowCodeDownloadSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowCodeDownload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DisallowCodeDownload", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowPublisherPolicy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> DisallowPublisherPolicyGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowPublisherPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DisallowPublisherPolicy");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowPublisherPolicy"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> DisallowPublisherPolicySetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowPublisherPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DisallowPublisherPolicy", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DynamicBase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> DynamicBaseGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_DynamicBase");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DynamicBase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> DynamicBaseSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_DynamicBase", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetCompatibilityFlags"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.Collections.Generic.Dictionary<string, object>> GetCompatibilityFlags
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetCompatibilityFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "GetCompatibilityFlags");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetConfigurationBytes"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, byte[]> GetConfigurationBytes
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetConfigurationBytes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "GetConfigurationBytes");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetUnsecureApplicationBase"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> GetUnsecureApplicationBase
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetUnsecureApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "GetUnsecureApplicationBase");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.InternalGetApplicationTrust"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust> InternalGetApplicationTrust
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalGetApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "InternalGetApplicationTrust");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.InternalSetApplicationTrust(System.Security.Policy.ApplicationTrust)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust> InternalSetApplicationTrustApplicationTrust
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "InternalSetApplicationTrust", typeof(global::System.Security.Policy.ApplicationTrust));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.IsFilePath(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string, bool> IsFilePathString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsFilePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "IsFilePath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LicenseFile"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> LicenseFileGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LicenseFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_LicenseFile");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LicenseFile"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> LicenseFileSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LicenseFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_LicenseFile", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LoaderOptimization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, global::System.LoaderOptimization> LoaderOptimizationGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_LoaderOptimization");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LoaderOptimization"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.LoaderOptimization> LoaderOptimizationSetLoaderOptimization
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_LoaderOptimization", typeof(global::System.LoaderOptimization));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.NormalizePath(System.String,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string, bool, string> NormalizePathStringBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NormalizePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "NormalizePath", typeof(string), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PartialTrustVisibleAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string[]> PartialTrustVisibleAssembliesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_PartialTrustVisibleAssemblies");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PartialTrustVisibleAssemblies"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string[]> PartialTrustVisibleAssembliesSetStringArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "set_PartialTrustVisibleAssemblies", typeof(string).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> PrivateBinPathGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_PrivateBinPath");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathProbe"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> PrivateBinPathProbeGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPathProbe", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_PrivateBinPathProbe");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathProbe"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> PrivateBinPathProbeSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PrivateBinPathProbe", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_PrivateBinPathProbe", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPath"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> PrivateBinPathSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_PrivateBinPath", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.SandboxInterop"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, bool> SandboxInteropGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SandboxInterop", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_SandboxInterop");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.SandboxInterop"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, bool> SandboxInteropSetBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SandboxInterop", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_SandboxInterop", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable`1{System.String})"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Collections.Generic.IEnumerable<string>> SetCompatibilitySwitchesIEnumerableOfString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCompatibilitySwitches", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "SetCompatibilitySwitches", typeof(global::System.Collections.Generic.IEnumerable<string>));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, byte[]> SetConfigurationBytesByteArray
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetConfigurationBytes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                         (object)null, "SetConfigurationBytes", typeof(byte).MakeArrayType());
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string, int, global::System.IntPtr> SetNativeFunctionStringInt32IntPtr
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetNativeFunction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, 
                         "SetNativeFunction", typeof(string), typeof(int), typeof(global::System.IntPtr));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetupDefaults(System.String,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string, bool> SetupDefaultsStringBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDefaults", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "SetupDefaults", typeof(string), typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetupFusionContext(System.IntPtr,System.AppDomainSetup)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.IntPtr, global::System.AppDomainSetup> SetupFusionContextIntPtrAppDomainSetup
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupFusionContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, 
                         "SetupFusionContext", typeof(global::System.IntPtr), typeof(global::System.AppDomainSetup));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyDirectories"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ShadowCopyDirectoriesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ShadowCopyDirectories");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyDirectories"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> ShadowCopyDirectoriesSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_ShadowCopyDirectories", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyFiles"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> ShadowCopyFilesGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_ShadowCopyFiles");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyFiles"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> ShadowCopyFilesSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_ShadowCopyFiles", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.TargetFrameworkName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string> TargetFrameworkNameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_TargetFrameworkName");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.TargetFrameworkName"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> TargetFrameworkNameSetString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "set_TargetFrameworkName", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.Value"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string[]> ValueGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "get_Value");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.VerifyDirList(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, string> VerifyDirListString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyDirList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "VerifyDirList", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.VerifyDir(System.String,System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainSetup, string, bool, string> VerifyDirStringBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyDir", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, "VerifyDir", typeof(string), typeof(bool));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializerArguments"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[]> AppDomainInitializerArgumentsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainInitializerArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_AppDomainInitializerArguments");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializerArguments"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string[]> AppDomainInitializerArgumentsSetStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainInitializerArguments", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_AppDomainInitializerArguments", typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.AppDomainInitializer> AppDomainInitializerGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainInitializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, global::System.AppDomainInitializer>(value)), 
                                                                                       typeof(global::System.AppDomainSetup), base.Instance, "get_AppDomainInitializer");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainInitializer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainInitializer> AppDomainInitializerSetAppDomainInitializer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainInitializer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, global::System.AppDomainInitializer>(value)), 
                                                                                       typeof(global::System.AppDomainSetup), base.Instance, "set_AppDomainInitializer", typeof(global::System.AppDomainInitializer));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerAssembly"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AppDomainManagerAssemblyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainManagerAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_AppDomainManagerAssembly");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerAssembly"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AppDomainManagerAssemblySetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainManagerAssembly", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_AppDomainManagerAssembly", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> AppDomainManagerTypeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_AppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_AppDomainManagerType");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.AppDomainManagerType"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> AppDomainManagerTypeSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_AppDomainManagerType", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_AppDomainManagerType", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationBase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ApplicationBaseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ApplicationBase");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationBaseKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ApplicationBaseKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationBaseKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ApplicationBaseKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationBase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ApplicationBaseSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_ApplicationBase", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ApplicationNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ApplicationName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationNameKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ApplicationNameKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationNameKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ApplicationNameKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ApplicationNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_ApplicationName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationTrust"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.ApplicationTrust> ApplicationTrustGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust>(value)), typeof(global::System.AppDomainSetup), 
                     base.Instance, "get_ApplicationTrust");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ApplicationTrust"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.ApplicationTrust> ApplicationTrustSetApplicationTrust
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust>(value)), typeof(global::System.AppDomainSetup), 
                     base.Instance, "set_ApplicationTrust", typeof(global::System.Security.Policy.ApplicationTrust));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Moles.MAppDomainSetup.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Moles.MAppDomainSetup.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.AppDomainSetup), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Moles.MAppDomainSetup Bind(global::System.IAppDomainSetup target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<global::System.AppDomainSetup, global::System.Moles.MAppDomainSetup, global::System.IAppDomainSetup>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.BuildShadowCopyDirectories"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> BuildShadowCopyDirectories
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BuildShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "BuildShadowCopyDirectories");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.ByteArraysAreDifferent(System.Byte[],System.Byte[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], byte[], bool> ByteArraysAreDifferentByteArrayByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ByteArraysAreDifferent", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                     "ByteArraysAreDifferent", typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CachePath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CachePathGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_CachePath");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CachePathKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> CachePathKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CachePathKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_CachePathKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CachePath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CachePathSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CachePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_CachePath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CheckedForTargetFrameworkName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CheckedForTargetFrameworkNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CheckedForTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_CheckedForTargetFrameworkName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.CheckedForTargetFrameworkName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> CheckedForTargetFrameworkNameSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_CheckedForTargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_CheckedForTargetFrameworkName", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationBytesKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ConfigurationBytesKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationBytesKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ConfigurationBytesKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationExtension"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ConfigurationExtensionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ConfigurationExtension");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFile"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ConfigurationFileGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ConfigurationFile");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFileInternal"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ConfigurationFileInternalGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationFileInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ConfigurationFileInternal");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFileKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ConfigurationFileKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ConfigurationFileKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ConfigurationFileKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ConfigurationFile"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ConfigurationFileSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ConfigurationFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_ConfigurationFile", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.Runtime.Hosting.ActivationArguments> ConstructorActivationArguments
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), 
                     (object)null, ".ctor", typeof(global::System.Runtime.Hosting.ActivationArguments));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.#ctor(System.ActivationContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.ActivationContext> ConstructorActivationContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, ".ctor", typeof(global::System.ActivationContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.#ctor(System.AppDomainSetup,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainSetup, global::System.AppDomainSetup, bool> ConstructorAppDomainSetupBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), (object)null, 
                     ".ctor", typeof(global::System.AppDomainSetup), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DeveloperPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DeveloperPathGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DeveloperPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DeveloperPath");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DeveloperPathKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DeveloperPathKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DeveloperPathKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DeveloperPathKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DeveloperPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> DeveloperPathSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DeveloperPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DeveloperPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowAppBaseProbingKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DisallowAppBaseProbingKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowAppBaseProbingKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DisallowAppBaseProbingKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowApplicationBaseProbing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisallowApplicationBaseProbingGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowApplicationBaseProbing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DisallowApplicationBaseProbing");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowApplicationBaseProbing"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisallowApplicationBaseProbingSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowApplicationBaseProbing", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DisallowApplicationBaseProbing", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowBindingRedirects"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisallowBindingRedirectsGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DisallowBindingRedirects");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowBindingRedirectsKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DisallowBindingRedirectsKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowBindingRedirectsKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DisallowBindingRedirectsKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowBindingRedirects"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisallowBindingRedirectsSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowBindingRedirects", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DisallowBindingRedirects", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowCodeDownload"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisallowCodeDownloadGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowCodeDownload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DisallowCodeDownload");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowCodeDownloadKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DisallowCodeDownloadKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowCodeDownloadKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DisallowCodeDownloadKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowCodeDownload"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisallowCodeDownloadSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowCodeDownload", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DisallowCodeDownload", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowPublisherPolicy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> DisallowPublisherPolicyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowPublisherPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DisallowPublisherPolicy");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowPublisherPolicyKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DisallowPublisherPolicyKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DisallowPublisherPolicyKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DisallowPublisherPolicyKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DisallowPublisherPolicy"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisallowPublisherPolicySetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DisallowPublisherPolicy", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DisallowPublisherPolicy", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DynamicBase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DynamicBaseGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_DynamicBase");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DynamicBaseKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> DynamicBaseKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_DynamicBaseKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_DynamicBaseKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.DynamicBase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> DynamicBaseSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_DynamicBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_DynamicBase", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetCompatibilityFlags"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Collections.Generic.Dictionary<string, object>> GetCompatibilityFlags
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetCompatibilityFlags", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Collections.Generic.Dictionary<string, object>>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "GetCompatibilityFlags");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetConfigurationBytes"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[]> GetConfigurationBytes
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetConfigurationBytes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, byte[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "GetConfigurationBytes");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.GetUnsecureApplicationBase"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetUnsecureApplicationBase
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetUnsecureApplicationBase", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "GetUnsecureApplicationBase");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.HostBindingKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> HostBindingKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_HostBindingKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_HostBindingKey");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.InternalGetApplicationTrust"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.Policy.ApplicationTrust> InternalGetApplicationTrust
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalGetApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust>(value)), typeof(global::System.AppDomainSetup), 
                     base.Instance, "InternalGetApplicationTrust");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.InternalSetApplicationTrust(System.Security.Policy.ApplicationTrust)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.Policy.ApplicationTrust> InternalSetApplicationTrustApplicationTrust
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalSetApplicationTrust", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Security.Policy.ApplicationTrust>(value)), typeof(global::System.AppDomainSetup), 
                     base.Instance, "InternalSetApplicationTrust", typeof(global::System.Security.Policy.ApplicationTrust));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.IsFilePath(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsFilePathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsFilePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "IsFilePath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LicenseFile"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> LicenseFileGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LicenseFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_LicenseFile");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LicenseFile"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> LicenseFileSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LicenseFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_LicenseFile", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LoaderOptimization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.LoaderOptimization> LoaderOptimizationGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, global::System.LoaderOptimization>(value)), 
                                                                                       typeof(global::System.AppDomainSetup), base.Instance, "get_LoaderOptimization");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LoaderOptimizationKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> LoaderOptimizationKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_LoaderOptimizationKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_LoaderOptimizationKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.LoaderOptimization"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.LoaderOptimization> LoaderOptimizationSetLoaderOptimization
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_LoaderOptimization", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, global::System.LoaderOptimization>(value)), 
                                                                                       typeof(global::System.AppDomainSetup), base.Instance, "set_LoaderOptimization", typeof(global::System.LoaderOptimization));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.Locate(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int> LocateString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Locate", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "Locate", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.MachineConfigKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> MachineConfigKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_MachineConfigKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_MachineConfigKey");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.NormalizePath(System.String,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool, string> NormalizePathStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NormalizePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string, bool, string>(value)), 
                                                                                          typeof(global::System.AppDomainSetup), base.Instance, "NormalizePath", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PartialTrustVisibleAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[]> PartialTrustVisibleAssembliesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_PartialTrustVisibleAssemblies");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PartialTrustVisibleAssemblies"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string[]> PartialTrustVisibleAssembliesSetStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PartialTrustVisibleAssemblies", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_PartialTrustVisibleAssemblies", typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathEnvironmentVariable"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PrivateBinPathEnvironmentVariableGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPathEnvironmentVariable", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_PrivateBinPathEnvironmentVariable");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PrivateBinPathGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_PrivateBinPath");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PrivateBinPathKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPathKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_PrivateBinPathKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathProbe"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PrivateBinPathProbeGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPathProbe", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_PrivateBinPathProbe");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathProbeKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> PrivateBinPathProbeKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_PrivateBinPathProbeKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_PrivateBinPathProbeKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPathProbe"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PrivateBinPathProbeSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PrivateBinPathProbe", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_PrivateBinPathProbe", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.PrivateBinPath"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> PrivateBinPathSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_PrivateBinPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_PrivateBinPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.RuntimeConfigurationFile"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> RuntimeConfigurationFileGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_RuntimeConfigurationFile", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_RuntimeConfigurationFile");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.SandboxInterop"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> SandboxInteropGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SandboxInterop", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_SandboxInterop");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.SandboxInterop"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> SandboxInteropSetBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_SandboxInterop", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_SandboxInterop", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable`1{System.String})"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Collections.Generic.IEnumerable<string>> SetCompatibilitySwitchesIEnumerableOfString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetCompatibilitySwitches", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.Collections.Generic.IEnumerable<string>>(value)), 
                     typeof(global::System.AppDomainSetup), 
                     base.Instance, "SetCompatibilitySwitches", typeof(global::System.Collections.Generic.IEnumerable<string>));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[]> SetConfigurationBytesByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetConfigurationBytes", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, byte[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "SetConfigurationBytes", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, int, global::System.IntPtr> SetNativeFunctionStringInt32IntPtr
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetNativeFunction", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string, int, global::System.IntPtr>(value)), 
                                                                                       typeof(global::System.AppDomainSetup), base.Instance, "SetNativeFunction", typeof(string), typeof(int), typeof(global::System.IntPtr));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetupDefaults(System.String,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, bool> SetupDefaultsStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupDefaults", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string, bool>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "SetupDefaults", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.SetupFusionContext(System.IntPtr,System.AppDomainSetup)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IntPtr, global::System.AppDomainSetup> SetupFusionContextIntPtrAppDomainSetup
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetupFusionContext", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.AppDomainSetup, global::System.IntPtr, global::System.AppDomainSetup>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, 
                     "SetupFusionContext", typeof(global::System.IntPtr), typeof(global::System.AppDomainSetup));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyDirectories"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ShadowCopyDirectoriesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ShadowCopyDirectories");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyDirectoriesKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ShadowCopyDirectoriesKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyDirectoriesKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ShadowCopyDirectoriesKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyDirectories"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ShadowCopyDirectoriesSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ShadowCopyDirectories", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_ShadowCopyDirectories", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyFiles"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ShadowCopyFilesGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_ShadowCopyFiles");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyFilesKey"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> ShadowCopyFilesKeyGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_ShadowCopyFilesKey", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "get_ShadowCopyFilesKey");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.ShadowCopyFiles"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> ShadowCopyFilesSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_ShadowCopyFiles", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_ShadowCopyFiles", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.TargetFrameworkName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> TargetFrameworkNameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_TargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_TargetFrameworkName");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.TargetFrameworkName"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> TargetFrameworkNameSetString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_TargetFrameworkName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "set_TargetFrameworkName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.UpdateByteArrayContextPropertyIfNeeded(System.Byte[],System.Byte[],System.String,System.IntPtr)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[], byte[], string, global::System.IntPtr> UpdateByteArrayContextPropertyIfNeededByteArrayByteArrayStringIntPtr
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UpdateByteArrayContextPropertyIfNeeded", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.AppDomainSetup), "UpdateByteArrayContextPropertyIfNeeded", 
                     typeof(byte).MakeArrayType(), typeof(byte).MakeArrayType(), typeof(string), typeof(global::System.IntPtr));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.AppDomainSetup.Value"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[]> ValueGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Value", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string[]>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "get_Value");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.VerifyDirList(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> VerifyDirListString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyDirList", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string>(value)), 
                     typeof(global::System.AppDomainSetup), base.Instance, "VerifyDirList", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainSetup.VerifyDir(System.String,System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool, string> VerifyDirStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyDir", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.AppDomainSetup, string, bool, string>(value)), 
                                                                                          typeof(global::System.AppDomainSetup), base.Instance, "VerifyDir", typeof(string), typeof(bool));
            }
        }
    }
}
namespace System.Moles
{
    /// <summary>Mole type of <see cref="T:System.AppDomainUnloadedException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.AppDomainUnloadedException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = AppDomainUnloadedException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MAppDomainUnloadedException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.AppDomainUnloadedException>
    {
        /// <summary>Initializes a new mole</summary>
        public MAppDomainUnloadedException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MAppDomainUnloadedException(global::System.AppDomainUnloadedException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Moles.MAppDomainUnloadedException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Moles.MAppDomainUnloadedException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.AppDomainUnloadedException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Moles.MAppDomainUnloadedException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<global::System.AppDomainUnloadedException, 
                                                                  global::System.Moles.MAppDomainUnloadedException, global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainUnloadedException.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainUnloadedException> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainUnloadedException), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainUnloadedException, global::System.Runtime.Serialization.SerializationInfo, global::System.Runtime.Serialization.StreamingContext> ConstructorSerializationInfoStreamingContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainUnloadedException), (object)null, 
                     ".ctor", typeof(global::System.Runtime.Serialization.SerializationInfo), typeof(global::System.Runtime.Serialization.StreamingContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainUnloadedException.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainUnloadedException, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainUnloadedException), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.AppDomainUnloadedException, string, global::System.Exception> ConstructorStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.AppDomainUnloadedException), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Exception));
            }
        }
    }
}
namespace System.Moles
{
    /// <summary>Mole type of <see cref="T:System.CannotUnloadAppDomainException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.CannotUnloadAppDomainException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = CannotUnloadAppDomainException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MCannotUnloadAppDomainException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.CannotUnloadAppDomainException>
    {
        /// <summary>Initializes a new mole</summary>
        public MCannotUnloadAppDomainException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MCannotUnloadAppDomainException(global::System.CannotUnloadAppDomainException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.Moles.MCannotUnloadAppDomainException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.Moles.MCannotUnloadAppDomainException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.CannotUnloadAppDomainException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.Moles.MCannotUnloadAppDomainException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<global::System.CannotUnloadAppDomainException, 
                                                                  global::System.Moles.MCannotUnloadAppDomainException, global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.CannotUnloadAppDomainException.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.CannotUnloadAppDomainException> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.CannotUnloadAppDomainException), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.CannotUnloadAppDomainException, global::System.Runtime.Serialization.SerializationInfo, global::System.Runtime.Serialization.StreamingContext> ConstructorSerializationInfoStreamingContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.CannotUnloadAppDomainException), (object)null, 
                     ".ctor", typeof(global::System.Runtime.Serialization.SerializationInfo), typeof(global::System.Runtime.Serialization.StreamingContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.CannotUnloadAppDomainException.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.CannotUnloadAppDomainException, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.CannotUnloadAppDomainException), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.CannotUnloadAppDomainException, string, global::System.Exception> ConstructorStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.CannotUnloadAppDomainException), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Exception));
            }
        }
    }
}
namespace System.IO.Moles
{
    /// <summary>Mole type of <see cref="T:System.IO.FileStream"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.IO.FileStream))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = FileStream")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MFileStream
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.IO.FileStream>
    {
        /// <summary>Initializes a new mole</summary>
        public MFileStream()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MFileStream(global::System.IO.FileStream instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReadByteArrayInt32Int32AsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "BeginRead", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWriteByteArrayInt32Int32AsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "BeginWrite", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanRead"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, bool> CanReadGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_CanRead");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanSeek"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, bool> CanSeekGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanSeek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_CanSeek");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanWrite"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, bool> CanWriteGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_CanWrite");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, global::System.IAsyncResult, int> EndReadIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "EndRead", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.IAsyncResult> EndWriteIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "EndWrite", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Flush"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> Flush
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "Flush");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> FlushAsyncCancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), 
                         (object)null, "FlushAsync", typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Flush(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, bool> FlushBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "Flush", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushInternalBuffer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> FlushInternalBuffer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushInternalBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "FlushInternalBuffer");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushOSBuffer"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> FlushOSBuffer
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushOSBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "FlushOSBuffer");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushRead"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> FlushRead
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "FlushRead");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushWrite(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, bool> FlushWriteBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "FlushWrite", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.GetAccessControl"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, global::System.Security.AccessControl.FileSecurity> GetAccessControl
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAccessControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "GetAccessControl");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Handle"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, global::System.IntPtr> HandleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_Handle");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.IsAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, bool> IsAsyncGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_IsAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Length"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, long> LengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_Length");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Lock(System.Int64,System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, long, long> LockInt64Int64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Lock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "Lock", typeof(long), typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Name"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, string> NameGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_Name");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.NameInternal"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, string> NameInternalGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NameInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_NameInternal");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Position"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, long> PositionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_Position");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Position"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, long> PositionSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "set_Position", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<int>> ReadAsyncByteArrayInt32Int32CancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "ReadAsync", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadByte"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, int> ReadByte
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "ReadByte");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, int> ReadByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Read", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "Read", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadCore(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, int> ReadCoreByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "ReadCore", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.SafeFileHandle"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle> SafeFileHandleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SafeFileHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "get_SafeFileHandle");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SeekCore(System.Int64,System.IO.SeekOrigin)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, long, global::System.IO.SeekOrigin, long> SeekCoreInt64SeekOrigin
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SeekCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "SeekCore", typeof(long), typeof(global::System.IO.SeekOrigin));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, long, global::System.IO.SeekOrigin, long> SeekInt64SeekOrigin
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Seek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "Seek", typeof(long), typeof(global::System.IO.SeekOrigin));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.Security.AccessControl.FileSecurity> SetAccessControlFileSecurity
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAccessControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), 
                         (object)null, "SetAccessControl", typeof(global::System.Security.AccessControl.FileSecurity));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetLengthCore(System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, long> SetLengthCoreInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLengthCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "SetLengthCore", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetLength(System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, long> SetLengthInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "SetLength", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, long, long> UnlockInt64Int64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Unlock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "Unlock", typeof(long), typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.VerifyHandleIsSync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> VerifyHandleIsSync
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyHandleIsSync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "VerifyHandleIsSync");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.VerifyOSHandlePosition"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> VerifyOSHandlePosition
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyOSHandlePosition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "VerifyOSHandlePosition");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.FileStream, byte[], int, int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> WriteAsyncByteArrayInt32Int32CancellationToken
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "WriteAsync", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.Threading.CancellationToken));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, byte[], int, int> WriteByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "Write", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteByte(System.Byte)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, byte> WriteByteByte
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, "WriteByte", typeof(byte));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteCore(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, byte[], int, int> WriteCoreByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                         "WriteCore", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReadByteArrayInt32Int32AsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "BeginRead", 
                     typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWriteByteArrayInt32Int32AsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "BeginWrite", 
                     typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.IO.Moles.MFileStream.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.IO.Moles.MFileStream.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.IO.FileStream), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.IO.Moles.MFileStream Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime
              .Bind<global::System.IO.FileStream, global::System.IO.Moles.MFileStream, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanRead"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanReadGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_CanRead");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanSeek"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanSeekGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanSeek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_CanSeek");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.CanWrite"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanWriteGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_CanWrite");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.CancelTask``1(System.Object)"/>
        /// </summary>
        [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CancelTask", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
        public static void CancelTaskObject<T>(mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> mole)
        {
            global::System.Type[] gma = new global::System.Type[1];
            gma[0] = typeof(T);
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetGenericMoleNonPublicStatic
                ((global::System.Delegate)mole, typeof(global::System.IO.FileStream), "CancelTask", gma, typeof(object));
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.IntPtr, global::System.IO.FileAccess> ConstructorIntPtrFileAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(global::System.IntPtr), typeof(global::System.IO.FileAccess));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.IntPtr, global::System.IO.FileAccess, bool> ConstructorIntPtrFileAccessBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(global::System.IntPtr), typeof(global::System.IO.FileAccess), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.IntPtr, global::System.IO.FileAccess, bool, int> ConstructorIntPtrFileAccessBooleanInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", 
                     typeof(global::System.IntPtr), typeof(global::System.IO.FileAccess), typeof(bool), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.IntPtr,System.IO.FileAccess,System.Boolean,System.Int32,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::System.IntPtr, global::System.IO.FileAccess, bool, int, bool> ConstructorIntPtrFileAccessBooleanInt32Boolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", 
                     typeof(global::System.IntPtr), typeof(global::System.IO.FileAccess), typeof(bool), typeof(int), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle, global::System.IO.FileAccess> ConstructorSafeFileHandleFileAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(global::Microsoft.Win32.SafeHandles.SafeFileHandle), typeof(global::System.IO.FileAccess));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle, global::System.IO.FileAccess, int> ConstructorSafeFileHandleFileAccessInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(global::Microsoft.Win32.SafeHandles.SafeFileHandle), typeof(global::System.IO.FileAccess), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle, global::System.IO.FileAccess, int, bool> ConstructorSafeFileHandleFileAccessInt32Boolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", 
                     typeof(global::Microsoft.Win32.SafeHandles.SafeFileHandle), typeof(global::System.IO.FileAccess), typeof(int), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode> ConstructorStringFileMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess> ConstructorStringFileModeFileAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare> ConstructorStringFileModeFileAccessFileShare
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int> ConstructorStringFileModeFileAccessFileShareInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), 
                     typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, bool> ConstructorStringFileModeFileAccessFileShareInt32Boolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", typeof(string), 
                     typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), 
                     typeof(global::System.IO.FileShare), typeof(int), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, global::System.IO.FileOptions> ConstructorStringFileModeFileAccessFileShareInt32FileOptions
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", typeof(string), 
                     typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), 
                     typeof(global::System.IO.FileShare), typeof(int), typeof(global::System.IO.FileOptions));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, global::System.IO.FileOptions, string, bool> ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), 
                     typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare), typeof(int), 
                     typeof(global::System.IO.FileOptions), typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.String,System.Boolean,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, global::System.IO.FileOptions, string, bool, bool> ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), 
                     typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare), typeof(int), 
                     typeof(global::System.IO.FileOptions), typeof(string), typeof(bool), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.String,System.Boolean,System.Boolean,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, global::System.IO.FileOptions, string, bool, bool, bool> ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBooleanBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), 
                     typeof(global::System.IO.FileShare), typeof(int), typeof(global::System.IO.FileOptions), 
                     typeof(string), typeof(bool), typeof(bool), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.Security.AccessControl.FileSystemRights, global::System.IO.FileShare, int, global::System.IO.FileOptions> ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptions
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", typeof(string), 
                     typeof(global::System.IO.FileMode), typeof(global::System.Security.AccessControl.FileSystemRights), 
                     typeof(global::System.IO.FileShare), typeof(int), typeof(global::System.IO.FileOptions));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.FileStream, string, global::System.IO.FileMode, global::System.Security.AccessControl.FileSystemRights, global::System.IO.FileShare, int, global::System.IO.FileOptions, global::System.Security.AccessControl.FileSecurity> ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptionsFileSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), (object)null, ".ctor", typeof(string), 
                     typeof(global::System.IO.FileMode), typeof(global::System.Security.AccessControl.FileSystemRights), typeof(global::System.IO.FileShare), 
                     typeof(int), typeof(global::System.IO.FileOptions), typeof(global::System.Security.AccessControl.FileSecurity));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndRead(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, int> EndReadIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, global::System.IAsyncResult, int>(value)), 
                                                                                       typeof(global::System.IO.FileStream), base.Instance, "EndRead", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndReadTask(System.IAsyncResult)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndReadTaskIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndReadTask", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), "EndReadTask", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndWrite(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndWriteIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, global::System.IAsyncResult>(value)), 
                                                                                       typeof(global::System.IO.FileStream), base.Instance, "EndWrite", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.EndWriteTask(System.IAsyncResult)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndWriteTaskIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWriteTask", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), "EndWriteTask", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Flush"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Flush
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "Flush");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> FlushAsyncCancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "FlushAsync", typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Flush(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> FlushBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "Flush", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushInternalBuffer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action FlushInternalBuffer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushInternalBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "FlushInternalBuffer");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushOSBuffer"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action FlushOSBuffer
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushOSBuffer", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "FlushOSBuffer");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushRead"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action FlushRead
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "FlushRead");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.FlushWrite(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> FlushWriteBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("FlushWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "FlushWrite", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.GetAccessControl"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Security.AccessControl.FileSecurity> GetAccessControl
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetAccessControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, global::System.Security.AccessControl.FileSecurity>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "GetAccessControl");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Handle"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IntPtr> HandleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, global::System.IntPtr>(value)), 
                                                                                       typeof(global::System.IO.FileStream), base.Instance, "get_Handle");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.IsAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAsyncGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, bool>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_IsAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Length"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> LengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_Length");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Lock(System.Int64,System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long, long> LockInt64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Lock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "Lock", typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Name"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Name", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, string>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_Name");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.NameInternal"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> NameInternalGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_NameInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, string>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_NameInternal");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Position"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> PositionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_Position");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.Position"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> PositionSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "set_Position", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<int>> ReadAsyncByteArrayInt32Int32CancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, 
                                                                                                      int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<int>>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "ReadAsync", 
                     typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadByte"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> ReadByte
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, int>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "ReadByte");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Read(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, int> ReadByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Read", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, int, int>(value)), 
                                                                                       typeof(global::System.IO.FileStream), base.Instance, "Read", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.ReadCore(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, int> ReadCoreByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, int, int>(value)), 
                                                                                          typeof(global::System.IO.FileStream), base.Instance, "ReadCore", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.FileStream.SafeFileHandle"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::Microsoft.Win32.SafeHandles.SafeFileHandle> SafeFileHandleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SafeFileHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "get_SafeFileHandle");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SeekCore(System.Int64,System.IO.SeekOrigin)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long, global::System.IO.SeekOrigin, long> SeekCoreInt64SeekOrigin
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SeekCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)(
                                                                                                                   mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long, global::System.IO.SeekOrigin, long>(value)
                                                                                                                   ), typeof(global::System.IO.FileStream), base.Instance, "SeekCore", typeof(long), typeof(global::System.IO.SeekOrigin));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Seek(System.Int64,System.IO.SeekOrigin)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long, global::System.IO.SeekOrigin, long> SeekInt64SeekOrigin
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Seek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long, global::System.IO.SeekOrigin, long>(value)
                                                                                                                ), typeof(global::System.IO.FileStream), base.Instance, "Seek", typeof(long), typeof(global::System.IO.SeekOrigin));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.Security.AccessControl.FileSecurity> SetAccessControlFileSecurity
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetAccessControl", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.FileStream, global::System.Security.AccessControl.FileSecurity>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "SetAccessControl", typeof(global::System.Security.AccessControl.FileSecurity));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetLengthCore(System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> SetLengthCoreInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLengthCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "SetLengthCore", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.SetLength(System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> SetLengthInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "SetLength", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Unlock(System.Int64,System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long, long> UnlockInt64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Unlock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, long, long>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "Unlock", typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.VerifyHandleIsSync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action VerifyHandleIsSync
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyHandleIsSync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "VerifyHandleIsSync");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.VerifyOSHandlePosition"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action VerifyOSHandlePosition
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("VerifyOSHandlePosition", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "VerifyOSHandlePosition");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> WriteAsyncByteArrayInt32Int32CancellationToken
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, 
                                                                                                      int, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task>(value)), typeof(global::System.IO.FileStream), 
                     base.Instance, "WriteAsync", typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.Threading.CancellationToken));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.Write(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[], int, int> WriteByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, int>(value)), 
                                                                                       typeof(global::System.IO.FileStream), base.Instance, "Write", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteByte(System.Byte)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte> WriteByteByte
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte>(value)), 
                     typeof(global::System.IO.FileStream), base.Instance, "WriteByte", typeof(byte));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.WriteCore(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[], int, int> WriteCoreByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteCore", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.FileStream, byte[], int, int>(value)), 
                                                                                          typeof(global::System.IO.FileStream), base.Instance, "WriteCore", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.FileStream.&lt;FlushAsync&gt;b__0(System.Object)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<object> _FlushAsyncb__0Object
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("<FlushAsync>b__0", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.FileStream), "<FlushAsync>b__0", typeof(object));
            }
        }
    }
}
namespace System.IO.IsolatedStorage.Moles
{
    /// <summary>Mole type of <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = IsolatedStorageFileStream")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MIsolatedStorageFileStream
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.IO.IsolatedStorage.IsolatedStorageFileStream>
    {
        /// <summary>Initializes a new mole</summary>
        public MIsolatedStorageFileStream()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MIsolatedStorageFileStream(global::System.IO.IsolatedStorage.IsolatedStorageFileStream instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReadByteArrayInt32Int32AsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "BeginRead", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWriteByteArrayInt32Int32AsyncCallbackObject
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "BeginWrite", 
                         typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> CanReadGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_CanRead");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> CanSeekGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanSeek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_CanSeek");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> CanWriteGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_CanWrite");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> DisposeBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "Dispose", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IAsyncResult, int> EndReadIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "EndRead", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IAsyncResult> EndWriteIAsyncResult
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "EndWrite", typeof(global::System.IAsyncResult));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream> Flush
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "Flush");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> FlushBoolean
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "Flush", typeof(bool));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IntPtr> HandleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_Handle");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool> IsAsyncGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_IsAsync");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long> LengthGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_Length");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, long> LockInt64Int64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Lock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "Lock", typeof(long), typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.NotPermittedError"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream> NotPermittedError
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NotPermittedError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "NotPermittedError");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.NotPermittedError(System.String)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string> NotPermittedErrorString
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NotPermittedError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "NotPermittedError", typeof(string));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long> PositionGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_Position");
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long> PositionSetInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "set_Position", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, int> ReadByte
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "ReadByte");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int, int> ReadByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Read", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "Read", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle> SafeFileHandleGet
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SafeFileHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, "get_SafeFileHandle");
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, global::System.IO.SeekOrigin, long> SeekInt64SeekOrigin
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Seek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "Seek", typeof(long), typeof(global::System.IO.SeekOrigin));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long> SetLengthInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "SetLength", typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, long> UnlockInt64Int64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Unlock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "Unlock", typeof(long), typeof(long));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int> WriteByteArrayInt32Int32
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "Write", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte> WriteByteByte
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                         (object)null, "WriteByte", typeof(byte));
                }
            }

            /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ZeroInit(System.UInt64,System.UInt64)"/>
            /// </summary>
            public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, ulong, ulong> ZeroInitUInt64UInt64
            {
                [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ZeroInit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
                set
                {
                    mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                        ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                         "ZeroInit", typeof(ulong), typeof(ulong));
                }
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginReadByteArrayInt32Int32AsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, 
                                                                                                                                                 int, global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "BeginRead", 
                                                                                       typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, global::System.AsyncCallback, object, global::System.IAsyncResult> BeginWriteByteArrayInt32Int32AsyncCallbackObject
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("BeginWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, 
                                                                                                                                                 int, global::System.AsyncCallback, object, global::System.IAsyncResult>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "BeginWrite", 
                                                                                       typeof(byte).MakeArrayType(), typeof(int), typeof(int), typeof(global::System.AsyncCallback), typeof(object));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.IO.IsolatedStorage.Moles.MIsolatedStorageFileStream.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.IO.IsolatedStorage.Moles.MIsolatedStorageFileStream.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.IO.IsolatedStorage.Moles.MIsolatedStorageFileStream Bind(global::System.IDisposable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, 
                                                                  global::System.IO.IsolatedStorage.Moles.MIsolatedStorageFileStream, global::System.IDisposable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanReadGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_CanRead");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanSeekGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanSeek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_CanSeek");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> CanWriteGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_CanWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_CanWrite");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode> ConstructorStringFileMode
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess> ConstructorStringFileModeFileAccess
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare> ConstructorStringFileModeFileAccessFileShare
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int> ConstructorStringFileModeFileAccessFileShareInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), 
                     typeof(global::System.IO.FileAccess), typeof(global::System.IO.FileShare), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, int, global::System.IO.IsolatedStorage.IsolatedStorageFile> ConstructorStringFileModeFileAccessFileShareInt32IsolatedStorageFile
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), 
                     (object)null, ".ctor", typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), 
                                                                                                                            typeof(global::System.IO.FileShare), typeof(int), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFile));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.FileShare, global::System.IO.IsolatedStorage.IsolatedStorageFile> ConstructorStringFileModeFileAccessFileShareIsolatedStorageFile
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.FileAccess), 
                                                                         typeof(global::System.IO.FileShare), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFile));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.FileAccess, global::System.IO.IsolatedStorage.IsolatedStorageFile> ConstructorStringFileModeFileAccessIsolatedStorageFile
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, ".ctor", 
                     typeof(string), typeof(global::System.IO.FileMode), 
                     typeof(global::System.IO.FileAccess), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFile));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string, global::System.IO.FileMode, global::System.IO.IsolatedStorage.IsolatedStorageFile> ConstructorStringFileModeIsolatedStorageFile
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.IO.FileMode), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFile));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> DisposeBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Dispose", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                          typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "Dispose", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IAsyncResult, int> EndReadIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndRead", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IAsyncResult, int>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "EndRead", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IAsyncResult> EndWriteIAsyncResult
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("EndWrite", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IAsyncResult>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "EndWrite", typeof(global::System.IAsyncResult));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action Flush
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "Flush");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<bool> FlushBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Flush", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "Flush", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.IntPtr> HandleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Handle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::System.IntPtr>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_Handle");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool> IsAsyncGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_IsAsync", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, bool>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_IsAsync");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> LengthGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Length", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_Length");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long, long> LockInt64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Lock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, long>
                                                                                              (value)), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "Lock", typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.NotPermittedError"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action NotPermittedError
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NotPermittedError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream>(value)), 
                                                                                          typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "NotPermittedError");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.NotPermittedError(System.String)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> NotPermittedErrorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NotPermittedError", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, string>(value)), 
                                                                                          typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "NotPermittedError", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long> PositionGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_Position");
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> PositionSetInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("set_Position", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "set_Position", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<int> ReadByte
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ReadByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, int>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "ReadByte");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], int, int, int> ReadByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Read", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int, int>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, 
                     "Read", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::Microsoft.Win32.SafeHandles.SafeFileHandle> SafeFileHandleGet
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("get_SafeFileHandle", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, global::Microsoft.Win32.SafeHandles.SafeFileHandle>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "get_SafeFileHandle");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Func<long, global::System.IO.SeekOrigin, long> SeekInt64SeekOrigin
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Seek", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)(mmf::Microsoft.Moles.Framework.MolesExtensions
                                                 .UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, global::System.IO.SeekOrigin, long>(value)), 
                     typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, 
                     "Seek", typeof(long), typeof(global::System.IO.SeekOrigin));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long> SetLengthInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("SetLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "SetLength", typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<long, long> UnlockInt64Int64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Unlock", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, long, long>
                                                                                              (value)), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "Unlock", typeof(long), typeof(long));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte[], int, int> WriteByteArrayInt32Int32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Write", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)(
                                                                                                                mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte[], int, int>
                                                                                                                    (value)), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, 
                                                                                       "Write", typeof(byte).MakeArrayType(), typeof(int), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<byte> WriteByteByte
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("WriteByte", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance((global::System.Delegate)
                                                                                         (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, byte>(value)), 
                                                                                       typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "WriteByte", typeof(byte));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ZeroInit(System.UInt64,System.UInt64)"/>
        /// </summary>
        public mmf::Microsoft.Moles.Framework.MolesDelegates.Action<ulong, ulong> ZeroInitUInt64UInt64
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ZeroInit", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance((global::System.Delegate)
                                                                                            (mmf::Microsoft.Moles.Framework.MolesExtensions.UnCurry<global::System.IO.IsolatedStorage.IsolatedStorageFileStream, ulong, ulong>
                                                                                                 (value)), typeof(global::System.IO.IsolatedStorage.IsolatedStorageFileStream), base.Instance, "ZeroInit", typeof(ulong), typeof(ulong));
            }
        }
    }
}
namespace System.IO.Moles
{
    /// <summary>Mole type of <see cref="T:System.IO.Path"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.IO.Path))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = Path")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public sealed partial class MPath
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase
    {
        /// <summary>Initializes a new instance</summary>
        private MPath()
        : base(typeof(global::System.IO.Path))
        {
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.AddLongPathPrefix(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> AddLongPathPrefixString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("AddLongPathPrefix", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "AddLongPathPrefix", typeof(string));
            }
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.IO.Moles.MPath.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.IO.Moles.MPath.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.IO.Path), value);
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.ChangeExtension(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string> ChangeExtensionStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ChangeExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "ChangeExtension", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.CheckInvalidPathChars(System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string, bool> CheckInvalidPathCharsStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckInvalidPathChars", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "CheckInvalidPathChars", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.CheckSearchPattern(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<string> CheckSearchPatternString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CheckSearchPattern", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "CheckSearchPattern", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.CombineNoChecks(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string> CombineNoChecksStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("CombineNoChecks", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "CombineNoChecks", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.Combine(System.String[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string[], string> CombineStringArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Combine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "Combine", typeof(string).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string> CombineStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Combine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "Combine", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.Combine(System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string, string> CombineStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Combine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "Combine", typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string, string, string> CombineStringStringStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("Combine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "Combine", 
                     typeof(string), typeof(string), typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetDirectoryName(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetDirectoryNameString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetDirectoryName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetDirectoryName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetExtension(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetExtensionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetExtension", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetFileName(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFileNameString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFileName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetFileName", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetFileNameWithoutExtension(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFileNameWithoutExtensionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFileNameWithoutExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetFileNameWithoutExtension", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetFullPathInternal(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFullPathInternalString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFullPathInternal", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetFullPathInternal", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetFullPath(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetFullPathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetFullPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetFullPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetInvalidFileNameChars"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<char[]> GetInvalidFileNameChars
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInvalidFileNameChars", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetInvalidFileNameChars");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetInvalidPathChars"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<char[]> GetInvalidPathChars
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetInvalidPathChars", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetInvalidPathChars");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetPathRoot(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> GetPathRootString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetPathRoot", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetPathRoot", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetRandomFileName"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetRandomFileName
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRandomFileName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetRandomFileName");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetRootLength(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, int> GetRootLengthString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetRootLength", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetRootLength", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetTempFileName"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetTempFileName
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTempFileName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetTempFileName");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.GetTempPath"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> GetTempPath
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("GetTempPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "GetTempPath");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.HasExtension(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> HasExtensionString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasExtension", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "HasExtension", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.HasIllegalCharacters(System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool, bool> HasIllegalCharactersStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasIllegalCharacters", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "HasIllegalCharacters", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.HasLongPathPrefix(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> HasLongPathPrefixString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("HasLongPathPrefix", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "HasLongPathPrefix", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.InternalCombine(System.String,System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string, string> InternalCombineStringString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalCombine", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "InternalCombine", typeof(string), typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.InternalGetTempFileName(System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<bool, string> InternalGetTempFileNameBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("InternalGetTempFileName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "InternalGetTempFileName", typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.IsDirectorySeparator(System.Char)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<char, bool> IsDirectorySeparatorChar
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsDirectorySeparator", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "IsDirectorySeparator", typeof(char));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.IsPathRooted(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsPathRootedString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsPathRooted", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "IsPathRooted", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.IsRelative(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool> IsRelativeString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("IsRelative", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "IsRelative", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.NormalizePath(System.String,System.Boolean)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool, string> NormalizePathStringBoolean
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NormalizePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "NormalizePath", typeof(string), typeof(bool));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.NormalizePath(System.String,System.Boolean,System.Int32)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, bool, int, string> NormalizePathStringBooleanInt32
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("NormalizePath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "NormalizePath", typeof(string), typeof(bool), typeof(int));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.RemoveLongPathPrefix(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> RemoveLongPathPrefixString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveLongPathPrefix", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "RemoveLongPathPrefix", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.RemoveLongPathPrefix(System.Text.StringBuilder)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<global::System.Text.StringBuilder, global::System.Text.StringBuilder> RemoveLongPathPrefixStringBuilder
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("RemoveLongPathPrefix", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "RemoveLongPathPrefix", typeof(global::System.Text.StringBuilder));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.ToBase32StringSuitableForDirName(System.Byte[])"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<byte[], string> ToBase32StringSuitableForDirNameByteArray
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("ToBase32StringSuitableForDirName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "ToBase32StringSuitableForDirName", typeof(byte).MakeArrayType());
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.UnsafeGetFullPath(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string, string> UnsafeGetFullPathString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UnsafeGetFullPath", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "UnsafeGetFullPath", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.Path.UnsafeGetTempFileName"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Func<string> UnsafeGetTempFileName
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod("UnsafeGetTempFileName", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicStatic)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicStatic
                    ((global::System.Delegate)value, typeof(global::System.IO.Path), "UnsafeGetTempFileName");
            }
        }
    }
}
namespace System.IO.Moles
{
    /// <summary>Mole type of <see cref="T:System.IO.PathTooLongException"/>
    /// .</summary>
    [mmf::Microsoft.Moles.Framework.Moles.MoleClass(typeof(global::System.IO.PathTooLongException))]
    [global::System.Diagnostics.DebuggerDisplay("Mole = PathTooLongException")]
    [global::System.Diagnostics.DebuggerNonUserCode]
    public partial class MPathTooLongException
      : mmf::Microsoft.Moles.Framework.Moles.MoleBase<global::System.IO.PathTooLongException>
    {
        /// <summary>Initializes a new mole</summary>
        public MPathTooLongException()
        : base()
        {
        }

        /// <summary>Initializes a new mole for the given instance</summary>
        public MPathTooLongException(global::System.IO.PathTooLongException instance)
        : base(instance)
        {
        }

        /// <summary>Define moles for all instances members</summary>
        public static partial class AllInstances
        {
        }

        /// <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsCurrent()
        {
            global::System.IO.Moles.MPathTooLongException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.CurrentProxy;
        }

        /// <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        public static void BehaveAsNotImplemented()
        {
            global::System.IO.Moles.MPathTooLongException.Behavior = mmf::Microsoft.Moles.Framework.MoleBehaviors.NotImplemented;
        }

        /// <summary>Assigns the behavior for all methods of the moled type</summary>
        public static mmf::Microsoft.Moles.Framework.Moles.IMoleBehavior Behavior
        {
            set
            {
                mmf::Microsoft.Moles.Framework.MoleBehaviors.AttachToType(typeof(global::System.IO.PathTooLongException), value);
            }
        }

        /// <summary>Binds the members of the interface to the mole.</summary>
        public global::System.IO.Moles.MPathTooLongException Bind(global::System.Runtime.Serialization.ISerializable target)
        {
            mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.Bind<global::System.IO.PathTooLongException, 
                                                                  global::System.IO.Moles.MPathTooLongException, global::System.Runtime.Serialization.ISerializable>(this, target);
            return this;
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.PathTooLongException.#ctor"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.PathTooLongException> Constructor
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.PathTooLongException), (object)null, ".ctor");
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.PathTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.PathTooLongException, global::System.Runtime.Serialization.SerializationInfo, global::System.Runtime.Serialization.StreamingContext> ConstructorSerializationInfoStreamingContext
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.NonPublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMoleNonPublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.PathTooLongException), (object)null, 
                     ".ctor", typeof(global::System.Runtime.Serialization.SerializationInfo), typeof(global::System.Runtime.Serialization.StreamingContext));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.PathTooLongException.#ctor(System.String)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.PathTooLongException, string> ConstructorString
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.PathTooLongException), (object)null, ".ctor", typeof(string));
            }
        }

        /// <summary>Sets the mole of <see cref="M:System.IO.PathTooLongException.#ctor(System.String,System.Exception)"/>
        /// </summary>
        public static mmf::Microsoft.Moles.Framework.MolesDelegates.Action<global::System.IO.PathTooLongException, string, global::System.Exception> ConstructorStringException
        {
            [mmf::Microsoft.Moles.Framework.Moles.MoleMethod(".ctor", mmf::Microsoft.Moles.Framework.Moles.MoleBindingFlags.PublicInstance)]
            set
            {
                mmf::Microsoft.Moles.Framework.Moles.MoleRuntime.SetMolePublicInstance
                    ((global::System.Delegate)value, typeof(global::System.IO.PathTooLongException), (object)null, 
                     ".ctor", typeof(string), typeof(global::System.Exception));
            }
        }
    }
}
namespace Microsoft.Moles.Framework
{
    /// <summary>Contains custom delegates used for the stubs and moles of mscorlib</summary>
    [global::System.Diagnostics.DebuggerNonUserCode]
    public static partial class MscorlibDelegates
    {
        public delegate void Ref0Action5<TRef0,T1,T2,T3,T4>(
            ref TRef0 riid,
            T1 rgszNames,
            T2 cNames,
            T3 lcid,
            T4 rgDispId
        );

        public delegate void Ref1Action8<T0,TRef1,T2,T3,T4,T5,T6,T7>(
            T0 dispIdMember,
            ref TRef1 riid,
            T2 lcid,
            T3 wFlags,
            T4 pDispParams,
            T5 pVarResult,
            T6 pExcepInfo,
            T7 puArgErr
        );
    }
}
